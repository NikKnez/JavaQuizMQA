-- MySQL dump 10.13  Distrib 8.0.34, for macos13 (x86_64)
--
-- Host: localhost    Database: javaquiz
-- ------------------------------------------------------
-- Server version	8.1.0

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `answers`
--

DROP TABLE IF EXISTS `answers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `answers` (
  `id` int DEFAULT NULL,
  `question_id` int DEFAULT NULL,
  `answer_text` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answers`
--

LOCK TABLES `answers` WRITE;
/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` VALUES (1,1,'a) -128 to 127'),(2,1,'b) -32768 to 32767'),(3,1,'c) -2147483648 to 2147483647'),(4,1,'d) None of the mentioned'),(5,2,'a) -128 to 127'),(6,2,'b) -32768 to 32767'),(7,2,'c) -2147483648 to 2147483647'),(8,2,'d) None of the mentioned'),(9,3,'a) 1 and 2'),(10,3,'b) 2 and 3'),(11,3,'c) 3 and 4'),(12,3,'d) All statements are correct'),(13,4,'a) int'),(14,4,'b) long'),(15,4,'c) byte'),(16,4,'d) float'),(17,5,'a) -1.7e+308'),(18,5,'b) -3.4e+038'),(19,5,'c) +1.7e+308'),(20,5,'d) -3.4e+050'),(21,6,'a) int'),(22,6,'b) float'),(23,6,'c) double'),(24,6,'d) long'),(25,7,'a) 16.34'),(26,7,'b) 16.566666644'),(27,7,'c) 16.46666666666667'),(28,7,'d) 16.46666666666666'),(29,8,'a) Infinity'),(30,8,'b) 0.0'),(31,8,'c) NaN'),(32,8,'d) all of the mentioned'),(33,9,'a) 25'),(34,9,'b) 24'),(35,9,'c) 32'),(36,9,'d) 33'),(37,11,'a) 301.5656'),(38,11,'b) 301'),(39,11,'c) 301.56'),(40,11,'d) 301.56560000'),(45,12,'a) -128 to 127'),(46,12,'b) 0 to 256'),(47,12,'c) 0 to 32767'),(48,12,'d) 0 to 65535'),(49,13,'a) ASCII'),(50,13,'b) ISO-LATIN-1'),(51,13,'c) UNICODE'),(52,13,'d) None of the mentioned'),(53,14,'a) True & False'),(54,14,'b) 0 & 1'),(55,14,'c) Any integer value'),(56,14,'d) true'),(57,15,'a) ASCII'),(58,15,'b) ISO-LATIN-1'),(59,15,'c) None of the mentioned'),(60,15,'d) ASCII and ISO-LATIN1'),(61,16,'a) boolean b1 = 1;'),(62,16,'b) boolean b2 = ‘false’;'),(63,16,'c) boolean b3 = false;'),(64,16,'d) boolean b4 = ‘true’'),(65,17,'a) i i i i i'),(66,17,'b) 0 1 2 3 4'),(67,17,'c) i j k l m'),(68,17,'d) None of the mentioned'),(69,18,'a) 66'),(70,18,'b) 67'),(71,18,'c) 65'),(72,18,'d) 64'),(73,19,'a) 0'),(74,19,'b) 1'),(75,19,'c) true'),(76,19,'d) false'),(77,20,'a) 0'),(78,20,'b) 1'),(79,20,'c) true'),(80,20,'d) false'),(91,29,'a) 162'),(92,29,'b) 65 97'),(93,29,'c) 67 95'),(94,29,'d) 66 98'),(95,31,'a) Ascending order'),(96,31,'b) Descending order'),(97,31,'c) Random order'),(98,31,'d) Depends on the order() method'),(99,32,'a) True'),(100,32,'b) False'),(101,33,'a) 0'),(102,33,'b) 1'),(103,33,'c) 2'),(104,33,'d) 3'),(105,34,'a) Sorted in the order of declaration of Enums'),(106,34,'b) Sorted in alphabetical order of Enums'),(107,34,'c) Sorted based on order() method'),(108,34,'d) Sorted in descending order of names of Enums'),(109,35,'a) Runtime Error'),(110,35,'b) Compilation Error'),(111,35,'c) It runs successfully'),(112,35,'d) EnumNotDefined Exception'),(113,36,'a) Runtime Error'),(114,36,'b) EnumNotDefined Exception'),(115,36,'c) It runs successfully'),(116,36,'d) Compilation Error'),(117,37,'a) 10\n   10\n   10'),(118,37,'b) Compilation Error'),(119,37,'c) 10\n   10'),(120,37,'d) Runtime Exception'),(121,38,'a) getEnums()'),(122,38,'b) getEnumConstants()'),(123,38,'c) getEnumList()'),(124,38,'d) getEnum()'),(125,39,'a) Object'),(126,39,'b) Enums'),(127,39,'c) Enum'),(128,39,'d) EnumClass'),(129,40,'a) True'),(130,40,'b) False'),(131,41,'a) Syntax'),(132,41,'b) Memory usage'),(133,41,'c) Garbage creation'),(134,41,'d) Precision'),(135,42,'a) int'),(136,42,'b) float'),(137,42,'c) double'),(138,42,'d) BigDecimal'),(139,43,'a) 0.009999999999999998\n   0.01'),(140,43,'b) 0.01\n   0.009999999999999998'),(141,43,'c) 0.01\n   0.01'),(142,43,'d) 0.009999999999999998\n   0.009999999999999998'),(143,44,'a) Base 2'),(144,44,'b) Base 8'),(145,44,'c) Base 10'),(146,44,'d) Base e'),(147,45,'a) There is no limitation'),(148,45,'b) toString returns null'),(149,45,'c) toString returns the number in expanded form'),(150,45,'d) toString uses scientific notation'),(151,46,'a) scale manipulation'),(152,46,'b) + operator'),(153,46,'c) rounding'),(154,46,'d) hashing'),(155,47,'a) java.lang'),(156,47,'b) java.math'),(157,47,'c) java.util'),(158,47,'d) java.io'),(159,48,'a) wrong statement'),(160,48,'b) custom defined statement'),(161,48,'c) static variable with value 1 on scale 10'),(162,48,'d) static variable with value 1 on scale 0'),(163,49,'a) MathContext'),(164,49,'b) MathLib'),(165,49,'c) BigLib'),(166,49,'d) BigContext'),(167,50,'a) Compilation failure'),(168,50,'b) Add: 473.66\nAdd using MathContext: 4.7E+2'),(169,50,'c) Add 4.7E+2\nAdd using MathContext: 473.66'),(170,50,'d) Runtime exception'),(171,51,'a) SimpleDateFormat'),(172,51,'b) DateFormat'),(173,51,'c) SimpleFormat'),(174,51,'d) DateConverter'),(175,52,'a) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nsdf.parse(new Date());'),(176,52,'b) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nsdf.format(new Date());'),(177,52,'c) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nnew Date().parse();'),(178,52,'d) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nnew Date().format();'),(179,53,'a) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nsdf.parse(new Date());'),(180,53,'b) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nsdf.format(new Date());'),(181,53,'c) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nnew Date().parse();'),(182,53,'d) SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-mm-dd\");\nnew Date().format();'),(183,54,'a)True'),(184,54,'b) False'),(185,55,'a) useDaylightTime() of Time class'),(186,55,'b) useDaylightTime() of Date class'),(187,55,'c) useDaylightTime() of TimeZone class'),(188,55,'d) useDaylightTime() of DateTime class'),(189,56,'a) java.time (JSR-310)'),(190,56,'b) java.date (JSR-310)'),(191,56,'c) java.joda'),(192,56,'d) java.jodaTime'),(193,57,'a) java.sql.Date'),(194,57,'b) java.util.Date'),(195,57,'c) java.sql.DateTime'),(196,57,'d) java.util.DateTime'),(197,58,'a) Date without time'),(198,58,'b) Time without Date'),(199,58,'c) Date and Time'),(200,58,'d) Date and Time with timezone'),(201,59,'a) long diffInMilli = java.time.Duration.between(dateTime1, dateTime2).toMillis();'),(202,59,'b) long diffInMilli = java.time.difference(dateTime1, dateTime2).toMillis();'),(203,59,'c) Date diffInMilli = java.time.Duration.between(dateTime1, dateTime2).toMillis();'),(204,59,'d) Time diffInMilli = java.time.Duration.between(dateTime1, dateTime2).toMillis();'),(205,60,'a) Time.getUTC();'),(206,60,'b) Date.getUTC();'),(207,60,'c) Instant.now();'),(208,60,'d) TimeZone.getUTC();'),(209,61,'a) 0x99fffL'),(210,61,'b) ABCDEFG'),(211,61,'c) 0x99fffa'),(212,61,'d) 99671246'),(213,62,'a) Integer'),(214,62,'b) Boolean'),(215,62,'c) Character'),(216,62,'d) Integer or Boolean'),(217,63,'a) L'),(218,63,'b) l'),(219,63,'c) D'),(220,63,'d) L and l'),(221,64,'a) integer'),(222,64,'b) float'),(223,64,'c) boolean'),(224,64,'d) all of the mentioned'),(225,65,'a) identifier'),(226,65,'b) keyword'),(227,65,'c) identifier & keyword'),(228,65,'d) none of the mentioned'),(229,66,'a) 38'),(230,66,'b) 39'),(231,66,'c) 40'),(232,66,'d) 41'),(233,67,'a) 0 2 4 6 8'),(234,67,'b) 1 2 3 4 5'),(235,67,'c) 0 1 2 3 4 5 6 7 8 9'),(236,67,'d) 1 2 3 4 5 6 7 8 9 10'),(237,68,'a) 5 6 5 6'),(238,68,'b) 5 6 5'),(239,68,'c) Runtime error'),(240,68,'d) Compilation error'),(241,69,'a) “Hello World”'),(242,69,'b) “Hello\nWorld”'),(243,69,'c) “”Hello World””'),(244,69,'d) \"Hello\nworld\"'),(245,70,'a) 5.0'),(246,70,'b) 25.0'),(247,70,'c) 7.0'),(248,70,'d) Compilation Error'),(249,71,'a) The destination type is smaller than source type'),(250,71,'b) The destination type is larger than source type'),(251,71,'c) The destination type can be larger or smaller than source type'),(252,71,'d) None of the mentioned'),(253,72,'a) prototype( )'),(254,72,'b) prototype(void)'),(255,72,'c) public prototype(void)'),(256,72,'d) public prototype( )'),(257,73,'a) b cannot contain value 100, limited by its range'),(258,73,'b) * operator has converted b * 50 into int, which can not be converted to byte without casting'),(259,73,'c) b cannot contain value 50'),(260,73,'d) No error in this code'),(261,74,'a) long'),(262,74,'b) int'),(263,74,'c) double'),(264,74,'d) float'),(265,75,'a) Floating-point value assigned to an integer type'),(266,75,'b) Integer value assigned to floating type'),(267,75,'c) Floating-point value assigned to a Floating type'),(268,75,'d) Integer value assigned to an integer type'),(269,76,'a) E U'),(270,76,'b) U E'),(271,76,'c) V E'),(272,76,'d) U F'),(273,77,'a) 38 43'),(274,77,'b) 39 44'),(275,77,'c) 295 300'),(276,77,'d) 295.04 300'),(277,78,'a) b is : 2'),(278,78,'b) b is : 1'),(279,78,'c) Compilation Error'),(280,78,'d) An exception is thrown at runtime'),(281,79,'a) 1 1'),(282,79,'b) 1 0'),(283,79,'c) 1 0 3'),(284,79,'d) 1 2 3'),(285,80,'a) Hello c'),(286,80,'b) Hello'),(287,80,'c) Hello world'),(288,80,'d) Runtime Error'),(289,81,'a) malloc'),(290,81,'b) alloc'),(291,81,'c) new'),(292,81,'d) new malloc'),(293,82,'a) int arr[] = new int[5]'),(294,82,'b) int [] arr = new int[5]'),(295,82,'c) int arr[] = new int[5]'),(296,82,'d) int arr[] = int [5] new'),(297,83,'a) 0'),(298,83,'b) value stored in arr[0]'),(299,83,'c) 00000'),(300,83,'d) Class name@ hashcode in hexadecimal form'),(301,84,'a) It is necessary to use new operator to initialize an array'),(302,84,'b) Array can be initialized using comma separated expressions surrounded by curly braces'),(303,84,'c) Array can be initialized when they are declared'),(304,84,'d) None of the mentioned'),(305,85,'a) Row'),(306,85,'b) Column'),(307,85,'c) Both Row and Column'),(308,85,'d) None of the mentioned'),(309,86,'a) 0 2 4 6 8'),(310,86,'b) 1 3 5 7 9'),(311,86,'c) 0 1 2 3 4 5 6 7 8 9'),(312,86,'d) 1 2 3 4 5 6 7 8 9 10'),(313,87,'a) 11'),(314,87,'b) 10'),(315,87,'c) 13'),(316,87,'d) 14'),(317,88,'a) 3'),(318,88,'b) 0'),(319,88,'c) 6'),(320,88,'d) 1'),(321,89,'a) 1 2 3 4 5 6 7 8 9 10'),(322,89,'b) 0 1 2 3 4 5 6 7 8 9 10'),(323,89,'c) i j k l m n o p q r'),(324,89,'d) i i i i i i i i i i'),(325,90,'a) 8'),(326,90,'b) 9'),(327,90,'c) 10'),(328,90,'d) 11'),(329,91,'a) Numeric'),(330,91,'b) Boolean'),(331,91,'c) Characters'),(332,91,'d) Both Numeric & Characters'),(333,92,'a) Integers'),(334,92,'b) Floating – point numbers'),(335,92,'c) Both Integers and floating – point numbers'),(336,92,'d) None of the mentioned'),(337,93,'a) 1, 2 & 3'),(338,93,'b) 1 & 4'),(339,93,'c) 1, 2, 3 & 4'),(340,93,'d) 3 & 2'),(341,94,'a) 1'),(342,94,'b) 2'),(343,94,'c) 3'),(344,94,'d) 4'),(345,95,'a) Assignment operators are more efficiently implemented by Java run-time system than their equivalent long forms'),(346,95,'b) Assignment operators run faster than their equivalent long forms'),(347,95,'c) Assignment operators can be used only with numeric and character data type'),(348,95,'d) None of the mentioned'),(349,96,'a) 1 1'),(350,96,'b) 0 1'),(351,96,'c) 1.5 1'),(352,96,'d) 1.5 1.0'),(353,97,'a) 5.640000000000001 5'),(354,97,'b) 5.640000000000001 5.0'),(355,97,'c) 5 5'),(356,97,'d) 5 5.640000000000001'),(357,98,'a) 25'),(358,98,'b) 24'),(359,98,'c) 32'),(360,98,'d) 33'),(361,99,'a) True'),(362,99,'b) False'),(363,100,'a) 3 2 4'),(364,100,'b) 3 2 3'),(365,100,'c) 2 3 4'),(366,100,'d) 3 4 4'),(367,101,'a) &'),(368,101,'b) &='),(369,101,'c) |='),(370,101,'d) <='),(371,102,'a) ~'),(372,102,'b) <<<'),(373,102,'c) >>>'),(374,102,'d) ^'),(375,103,'a) 1'),(376,103,'b) 32'),(377,103,'c) 33'),(378,103,'d) 31'),(379,104,'a) <<'),(380,104,'b) >>'),(381,104,'c) <<='),(382,104,'d) >>='),(383,105,'a) The left shift operator, <<, shifts all of the bits in a value to the left specified number of times'),(384,105,'b) The right shift operator, >>, shifts all of the bits in a value to the right specified number of times'),(385,105,'c) The left shift operator can be used as an alternative to multiplying by 2'),(386,105,'d) The right shift operator automatically fills the higher order bits with 0'),(387,106,'a) 42 42'),(388,106,'b) 43 43'),(389,106,'c) 42 -43'),(390,106,'d) 42 43'),(391,107,'a) 7 2'),(392,107,'b) 7 7'),(393,107,'c) 7 5'),(394,107,'d) 5 2'),(395,108,'a) 0 64'),(396,108,'b) 64 0'),(397,108,'c) 0 256'),(398,108,'d) 256 0'),(399,109,'a) 10'),(400,109,'b) 5'),(401,109,'c) 2'),(402,109,'d) 20'),(403,110,'a) 3 1 6'),(404,110,'b) 2 2 3'),(405,110,'c) 2 3 4'),(406,110,'d) 3 3 6'),(407,111,'a) Integer'),(408,111,'b) Boolean'),(409,111,'c) Characters'),(410,111,'d) Double'),(411,112,'a) Integers'),(412,112,'b) Floating – point numbers'),(413,112,'c) Boolean'),(414,112,'d) None of the mentioned'),(415,113,'a) 3 & 2'),(416,113,'b) 1 & 4'),(417,113,'c) 1, 2 & 4'),(418,113,'d) 1, 2 & 3'),(419,114,'a) !'),(420,114,'b) |'),(421,114,'c) &'),(422,114,'d) &&'),(423,115,'a) true and false are numeric values 1 and 0'),(424,115,'b) true and false are numeric values 0 and 1'),(425,115,'c) true is any non zero value and false is 0'),(426,115,'d) true and false are non numeric values'),(427,116,'a) 1'),(428,116,'b) 0'),(429,116,'c) true'),(430,116,'d) false'),(431,117,'a) false false'),(432,117,'b) true true'),(433,117,'c) true false'),(434,117,'d) false true'),(435,118,'a) 0'),(436,118,'b) 1'),(437,118,'c) 3'),(438,118,'d) -4'),(439,119,'a) 1'),(440,119,'b) 2'),(441,119,'c) Runtime error owing to division by zero in if condition'),(442,119,'d) Unpredictable behavior of program'),(443,120,'a) 0'),(444,120,'b) 1'),(445,120,'c) false'),(446,120,'d) true'),(447,121,'a) ()'),(448,121,'b) ++'),(449,121,'c) *'),(450,121,'d) >>'),(451,122,'a) Integer'),(452,122,'b) Floating – point numbers'),(453,122,'c) Boolean'),(454,122,'d) None of the mentioned'),(455,123,'a) 0'),(456,123,'b) 1'),(457,123,'c) 9'),(458,123,'d) 8'),(459,124,'a) 1 -> 2 -> 3'),(460,124,'b) 2 -> 1 -> 3'),(461,124,'c) 3 -> 2 -> 1'),(462,124,'d) 2 -> 3 -> 1'),(463,125,'a) Equal to operator has least precedence'),(464,125,'b) Brackets () have highest precedence'),(465,125,'c) Division operator, /, has higher precedence than multiplication operator'),(466,125,'d) Addition operator, +, and subtraction operator have equal precedence'),(467,126,'a) 10'),(468,126,'b) 11'),(469,126,'c) 12'),(470,126,'d) 56'),(471,127,'a) 24 8'),(472,127,'b) 24 9'),(473,127,'c) 27 8'),(474,127,'d) 27 9'),(475,128,'a) compile and runs fine'),(476,128,'b) 20'),(477,128,'c) run time error'),(478,128,'d) compile time error'),(479,129,'a) 1 will give better performance as it has no parentheses'),(480,129,'b) 2 will give better performance as it has parentheses'),(481,129,'c) Both 1 & 2 will give equal performance'),(482,129,'d) Dependent on the computer system'),(483,130,'a) compile time error'),(484,130,'b) runtime error'),(485,130,'c) a=20 b=0 c=20 d=1'),(486,130,'d) none of the mentioned'),(487,131,'a) if'),(488,131,'b) switch'),(489,131,'c) if & switch'),(490,131,'d) none of the mentioned'),(491,132,'a) if()'),(492,132,'b) for()'),(493,132,'c) continue'),(494,132,'d) break'),(495,133,'a) do-while)'),(496,133,'b) while)'),(497,133,'c) for'),(498,133,'d) none of the mentioned'),(499,134,'a) break'),(500,134,'b) return'),(501,134,'c) exit'),(502,134,'d) continue'),(503,135,'a) switch statement is more efficient than a set of nested ifs'),(504,135,'b) two case constants in the same switch can have identical values'),(505,135,'c) switch statement can only test for equality, whereas if statement can evaluate any type of boolean expression'),(506,135,'d) it is possible to create a nested switch statements'),(507,136,'a) 1'),(508,136,'b) 2'),(509,136,'c) 3'),(510,136,'d) 4'),(511,137,'a) 5'),(512,137,'b) 6'),(513,137,'c) 14'),(514,137,'d) compilation error'),(515,138,'a) 1 3 5 7'),(516,138,'b) 2 4 6 8'),(517,138,'c) 1 3 5 7 9'),(518,138,'d) 1 2 3 4 5 6 7 8 9'),(519,139,'a) Hello'),(520,139,'b) run time error'),(521,139,'c) Hello world'),(522,139,'d) compile time error'),(523,140,'a) 5 10'),(524,140,'b) 10 5'),(525,140,'c) 5'),(526,140,'d) 10'),(527,141,'a) 1 2'),(528,141,'b) 2 3'),(529,141,'c) 1 3'),(530,141,'d) 3'),(531,142,'a) True'),(532,142,'b) False'),(533,143,'a) Break stops the execution of entire program'),(534,143,'b) Break halts the execution and forces the control out of the loop'),(535,143,'c) Break forces the control out of the loop and starts the execution of next iteration'),(536,143,'d) Break halts the execution of the loop for certain time frame'),(537,144,'a) do statement executes the code of a loop at least once'),(538,144,'b) do statement does not get execute if condition is not matched in the first iteration'),(539,144,'c) do statement checks the condition at the beginning of the loop'),(540,144,'d) do statement executes the code more than once always'),(541,145,'a) Continue'),(542,145,'b) Exit'),(543,145,'c) break'),(544,145,'d) do'),(545,146,'a) int and float'),(546,146,'b) byte and short'),(547,146,'c) char and long'),(548,146,'d) byte and char'),(549,147,'a) if'),(550,147,'b) if-else'),(551,147,'c) switch'),(552,147,'d) do-while'),(553,148,'a) break'),(554,148,'b) goto'),(555,148,'c) continue'),(556,148,'d) return'),(557,149,'a) Only from innermost loop'),(558,149,'b) Terminates a program'),(559,149,'c) Only from innermost switch'),(560,149,'d) From innermost loops or switches'),(561,150,'a) exit()'),(562,150,'b) break'),(563,150,'c) continue'),(564,150,'d) return'),(565,151,'a) Inheritance'),(566,151,'b) Encapsulation'),(567,151,'c) Polymorphism'),(568,151,'d) Compilation'),(569,152,'a) Compile time polymorphism'),(570,152,'b) Execution time polymorphism'),(571,152,'c) Multiple polymorphism'),(572,152,'d) Multilevel polymorphism'),(573,153,'a) At run time'),(574,153,'b) At compile time'),(575,153,'c) At coding time'),(576,153,'d) At execution time'),(577,154,'a) More than one method with same name but different method signature and different number or type of parameters'),(578,154,'b) More than one method with same name, same signature but different number of signature'),(579,154,'c) More than one method with same name, same signature, same number of parameters but different type'),(580,154,'d) More than one method with same name, same number of parameters and type but different signature'),(581,155,'a) Polymorphism'),(582,155,'b) Encapsulation'),(583,155,'c) Abstraction'),(584,155,'d) Inheritance'),(585,156,'a) Encapsulation'),(586,156,'b) Inheritance'),(587,156,'c) Polymorphism'),(588,156,'d) Abstraction'),(589,157,'a) Aggregation'),(590,157,'b) Composition'),(591,157,'c) Encapsulation'),(592,157,'d) Association'),(593,158,'a) Aggregation'),(594,158,'b) Composition'),(595,158,'c) Encapsulation'),(596,158,'d) Association'),(597,159,'a) Aggregation'),(598,159,'b) Composition'),(599,159,'c) Encapsulation'),(600,159,'d) Association'),(601,160,'a) True'),(602,160,'b) False'),(603,161,'a) JVM'),(604,161,'b) JDK'),(605,161,'c) JIT'),(606,161,'d) JRE'),(607,162,'a) JVM'),(608,162,'b) JDK'),(609,162,'c) JIT'),(610,162,'d) JRE'),(611,163,'a) JVM'),(612,163,'b) JDK'),(613,163,'c) JIT'),(614,163,'d) JRE'),(615,164,'a) JVM'),(616,164,'b) JDK'),(617,164,'c) JIT'),(618,164,'d) JRE'),(619,165,'a) Platform independent programming language'),(620,165,'b) Platform dependent programming language'),(621,165,'c) Code dependent programming language'),(622,165,'d) Sequence dependent programming language'),(623,166,'a) public'),(624,166,'b) static'),(625,166,'c) private'),(626,166,'d) final'),(627,167,'a) .class'),(628,167,'b) .java'),(629,167,'c) .txt'),(630,167,'d) .js'),(631,168,'a) .class'),(632,168,'b) .java'),(633,168,'c) .txt'),(634,168,'d) .js'),(635,169,'a) Java source file header'),(636,169,'b) Extension of compilation unit'),(637,169,'c) We cannot differentiate between class and interface'),(638,169,'d) The class or interface name should be postfixed with unit type'),(639,170,'a) They convert bytecode to machine language code'),(640,170,'b) They read high level code and execute them'),(641,170,'c) They are intermediated between JIT and JVM'),(642,170,'d) It is a synonym for JIT'),(643,171,'Memory address of allocated memory of object'),(644,171,'b) NULL'),(645,171,'c) Any arbitrary pointer'),(646,171,'d) Garbage'),(647,172,'a) class'),(648,172,'b) struct'),(649,172,'c) int'),(650,172,'d) none of the mentioned'),(651,173,'a) Box obj = new Box();'),(652,173,'b) Box obj = new Box;'),(653,173,'c) obj = new Box();'),(654,173,'d) new Box obj;'),(655,174,'a) malloc'),(656,174,'b) alloc'),(657,174,'c) new'),(658,174,'d) give'),(659,175,'a) Every class must contain a main() method'),(660,175,'b) Applets do not require a main() method at all'),(661,175,'c) There can be only one main() method in a program'),(662,175,'d) main() method must be made public'),(663,176,'a) 9'),(664,176,'b) 8'),(665,176,'c) Compilation error'),(666,176,'d) Runtime error'),(667,177,'a) Public method is accessible to all other classes in the hierarchy'),(668,177,'b) Public method is accessible only to subclasses of its parent class'),(669,177,'c) Public method can only be called by object of its class'),(670,177,'d) Public method can be accessed by calling object of the public class'),(671,178,'a) 12'),(672,178,'b) 200'),(673,178,'c) 400'),(674,178,'d) 100'),(675,179,'a) 1'),(676,179,'b) 2'),(677,179,'c) Runtime error'),(678,179,'d) Garbage value'),(679,180,'a) 0'),(680,180,'b) 1'),(681,180,'c) Runtime error'),(682,180,'d) classname@hashcode in hexadecimal form'),(683,181,'a) int'),(684,181,'b) float'),(685,181,'c) void'),(686,181,'d) double'),(687,182,'a) Function overriding'),(688,182,'b) Function overloading'),(689,182,'c) Function doubling'),(690,182,'d) None of the mentioned'),(691,183,'a) finalize'),(692,183,'b) delete'),(693,183,'c) class'),(694,183,'d) constructor'),(695,184,'a) main method'),(696,184,'b) finalize method'),(697,184,'c) static method'),(698,184,'d) private method'),(699,185,'a) All object of a class are allotted memory for the all the variables defined in the class'),(700,185,'b) If a function is defined public it can be accessed by object of other class by inheritation'),(701,185,'c) main() method must be made public'),(702,185,'d) All object of a class are allotted memory for the methods defined in the class'),(704,186,'a) 0'),(705,186,'b) 1'),(706,186,'c) 6'),(707,186,'d) 25'),(708,187,'a) false'),(709,187,'b) true'),(710,187,'c) 0'),(711,187,'d) 1'),(712,188,'a) 0'),(713,188,'b) 1'),(714,188,'c) 25'),(715,188,'d) 26'),(716,189,'a) only sum(10)'),(717,189,'b) only sum(10,20)'),(718,189,'c) only sum(10) & sum(10,20)'),(719,189,'d) all of the mentioned'),(720,190,'a) 0'),(721,190,'b) 1'),(722,190,'c) 30'),(723,190,'d) error'),(724,191,'a) int'),(725,191,'b) float'),(726,191,'c) void'),(727,191,'d) none of the mentioned'),(728,192,'a) import'),(729,192,'b) catch'),(730,192,'c) abstract'),(731,192,'d) this'),(732,193,'a) finalize'),(733,193,'b) delete'),(734,193,'c) class'),(735,193,'d) constructor'),(736,194,'a) delete'),(737,194,'b) free'),(738,194,'c) new'),(739,194,'d) none of the mentioned'),(740,195,'a) finalize()'),(741,195,'b) delete()'),(742,195,'c) main()'),(743,195,'d) none of the mentioned'),(744,196,'a) 100'),(745,196,'b) 150'),(746,196,'c) 200'),(747,196,'d) 250'),(748,197,'a) compile time error'),(749,197,'b) run time error'),(750,197,'c) compile and runs fine'),(751,197,'d) unreported exception java.io.IOException in default constructor'),(752,198,'a) 150'),(753,198,'b) 200'),(754,198,'c) Run time error'),(755,198,'d) Compilation error'),(756,199,'a) default constructor is called at the time of object declaration'),(757,199,'b) constructor can be parameterized'),(758,199,'c) finalize() method is called when a object goes out of scope and is no longer needed'),(759,199,'d) finalize() method must be declared protected'),(760,200,'a) 0 0'),(761,200,'b) 5 6'),(762,200,'c) 6 5'),(763,200,'d) 5 5'),(764,201,'a) Private constructor ensures only one instance of a class exist at any point of time'),(765,201,'b) Private constructor ensures multiple instances of a class exist at any point of time'),(766,201,'c) Private constructor eases the instantiation of a class'),(767,201,'d) Private constructor allows creating objects in other classes'),(768,202,'a) Runtime error'),(769,202,'b) Throws exception'),(770,202,'c) compile time error'),(771,202,'d) Runs successfully'),(772,203,'a) Constructors cannot be synchronized in Java'),(773,203,'b) Java does not provide default copy constructor'),(774,203,'c) Constructor can have a return type'),(775,203,'d) “this” and “super” can be used in a constructor'),(776,204,'a) Class.getInstance calls the constructor'),(777,204,'b) Class.getInstance is same as new operator'),(778,204,'c) Class.getInstance needs to have matching constructor'),(779,204,'d) Class.getInstance creates object if class does not have any constructor'),(780,205,'a) It can contain return type'),(781,205,'b) It can take any number of parameters'),(782,205,'c) It can have any non access modifiers'),(783,205,'d) Constructor cannot throw an exception'),(784,206,'a) True'),(785,206,'b) False'),(786,207,'a) Protected constructor can be called directly'),(787,207,'b) Protected constructor can only be called using super()'),(788,207,'c) Protected constructor can be used outside package'),(789,207,'d) Protected constructor can be instantiated even if child is in a different package'),(790,208,'a) Passing itself to another method'),(791,208,'b) Calling another constructor in constructor chaining'),(792,208,'c) Referring to the instance variable when local variable has the same name'),(793,208,'d) Passing itself to method of the same class'),(794,209,'a) Compilation error'),(795,209,'b) Compilation succeeds'),(796,209,'c) Runtime error'),(797,209,'d) Compilation succeeds but at the time of creating object using default constructor, it throws compilation error'),(798,210,'a) Compilation error'),(799,210,'b) Runtime error'),(800,210,'c) Compilation and runs successfully'),(801,210,'d) Only String return type is allowed'),(802,211,'a) Heap'),(803,211,'b) Stack'),(804,211,'c) JVM'),(805,211,'d) Class'),(806,212,'a) Young space'),(807,212,'b) Old space'),(808,212,'c) Young or Old space depending on space availability'),(809,212,'d) JVM'),(810,213,'a) Cleanup model'),(811,213,'b) Mark and sweep model'),(812,213,'c) Space management model'),(813,213,'d) Sweep model'),(814,214,'a) Initial; Maximum memory'),(815,214,'b) Maximum; Initial memory'),(816,214,'c) Maximum memory'),(817,214,'d) Initial memory'),(818,215,'a) MemoryFullException'),(819,215,'b) MemoryOutOfBoundsException'),(820,215,'c) OutOfMemoryError'),(821,215,'d) MemoryError'),(822,216,'a) jmap'),(823,216,'b) memorymap'),(824,216,'c) memorypath'),(825,216,'d) jvmmap'),(826,217,'a) The thread continues its operation'),(827,217,'b) Garbage collection cannot happen until the thread is running'),(828,217,'c) The thread is paused while garbage collection runs'),(829,217,'d) The thread and garbage collection do not interfere with each other'),(830,218,'a) JVM'),(831,218,'b) JConsole'),(832,218,'c) JProfiler'),(833,218,'d) Eclipse Profiler'),(834,219,'a) Code changes'),(835,219,'b) JVM parameter tuning'),(836,219,'c) Process restart'),(837,219,'d) GC parameter tuning'),(838,220,'a) True'),(839,220,'b) False'),(840,221,'a) method overloading'),(841,221,'b) method overriding'),(842,221,'c) method hiding'),(843,221,'d) none of the mentioned'),(844,222,'a) Methods'),(845,222,'b) Constructors'),(846,222,'c) All of the mentioned'),(847,222,'d) None of the mentioned'),(848,223,'a) Copy of argument is made into the formal parameter of the subroutine'),(849,223,'b) Reference to original argument is passed to formal parameter of the subroutine'),(850,223,'c) Copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument'),(851,223,'d) Reference to original argument is passed to formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument'),(852,224,'a) Polymorphism'),(853,224,'b) Abstraction'),(854,224,'c) Encapsulation'),(855,224,'d) Recursion'),(856,225,'a) int float method'),(857,225,'b) float int method'),(858,225,'c) compile time error'),(859,225,'d) run time error'),(860,226,'a) 5'),(861,226,'b) 6'),(862,226,'c) 7'),(863,226,'d) 8'),(864,227,'a) 6'),(865,227,'b) 7'),(866,227,'c) 8'),(867,227,'d) 9'),(868,228,'a) 6 6'),(869,228,'b) 6.4 6.4'),(870,228,'c) 6.4 6'),(871,228,'d) 4 6.4'),(872,229,'a) 10 20'),(873,229,'b) 20 10'),(874,229,'c) 20 40'),(875,229,'d) 40 20'),(876,230,'a) 10 20'),(877,230,'b) 20 10'),(878,230,'c) 20 40'),(879,230,'d) 40 20'),(880,231,'a) private'),(881,231,'b) public'),(882,231,'c) protected'),(883,231,'d) none of the mentioned'),(884,232,'a) public'),(885,232,'b) private'),(886,232,'c) static'),(887,232,'d) protected'),(888,233,'a) private'),(889,233,'b) public'),(890,233,'c) public, within its own package'),(891,233,'d) protected'),(892,234,'a) Polymorphism'),(893,234,'b) Abstraction'),(894,234,'c) Encapsulation'),(895,234,'d) Recursion'),(896,235,'a) public members of class can be accessed by any code in the program'),(897,235,'b) private members of class can only be accessed by other members of the class'),(898,235,'c) private members of class can be inherited by a subclass, and become protected members in subclass'),(899,235,'d) protected members of a class can be inherited by a subclass, and become private members of the subclass'),(900,236,'a) 3 3'),(901,236,'b) 2 3'),(902,236,'c) Runtime Error'),(903,236,'d) Compilation Error'),(904,237,'a) 2 3'),(905,237,'b) 3 3'),(906,237,'c) Runtime Error'),(907,237,'d) Compilation Error'),(908,238,'a) 7 7.4'),(909,238,'b) 6 6.4'),(910,238,'c) 7 9'),(911,238,'d) 9 7'),(912,239,'a) public'),(913,239,'b) private'),(914,239,'c) protected'),(915,239,'d) none of the mentioned'),(916,240,'a) Public'),(917,240,'b) Private'),(918,240,'c) Protected'),(919,240,'d) Void'),(920,241,'a) private'),(921,241,'b) public'),(922,241,'c) protected'),(923,241,'d) default'),(924,242,'a) private'),(925,242,'b) public'),(926,242,'c) protected'),(927,242,'d) default'),(928,243,'a) accessible only within the class'),(929,243,'b) accessible only within package'),(930,243,'c) accessible within package and outside the package but through inheritance only'),(931,243,'d) accessible by all'),(932,244,'a) Any class can instantiate objects of class A'),(933,244,'b) Objects of class A can be instantiated only within the class where it is declared'),(934,244,'c) Inherited class can instantiate objects of class A'),(935,244,'d) classes within the same package as class A can instantiate objects of class A'),(936,245,'a) default and final'),(937,245,'b) default and static'),(938,245,'c) public, static and final'),(939,245,'d) protect, static and final'),(940,246,'a) Final class cause compilation failure'),(941,246,'b) Final class cannot be instantiated'),(942,246,'c) Final class cause runtime failure'),(943,246,'d) Final class cannot be inherited'),(944,247,'a) 1, 10'),(945,247,'b) 10, 10'),(946,247,'c) 10, 1'),(947,247,'d) 1, 1'),(948,248,'a) True'),(949,248,'b) False'),(950,249,'a) protected'),(951,249,'b) private'),(952,249,'c) public'),(953,249,'d) default'),(954,250,'a) class'),(955,250,'b) object'),(956,250,'c) variable'),(957,250,'d) none of the mentioned'),(958,251,'a) final'),(959,251,'b) last'),(960,251,'c) constant'),(961,251,'d) static'),(962,252,'a) class'),(963,252,'b) object'),(964,252,'c) variable'),(965,252,'d) method'),(966,253,'a) static methods can call other static methods only'),(967,253,'b) static methods must only access static data'),(968,253,'c) static methods can not refer to this or super in any way'),(969,253,'d) when object of class is declared, each object contains its own copy of static variables'),(970,254,'a) Variables declared as final occupy memory'),(971,254,'b) final variable must be initialized at the time of declaration'),(972,254,'c) Arrays in java are implemented as an object'),(973,254,'d) All arrays contain an attribute-length which contains the number of elements stored in the array'),(974,255,'a) main()'),(975,255,'b) delete()'),(976,255,'c) run()'),(977,255,'d) finalize()'),(978,256,'a) 1 2'),(979,256,'b) 2 3'),(980,256,'c) 3 2'),(981,256,'d) 1 5'),(982,257,'a) 1 2'),(983,257,'b) 1 1'),(984,257,'c) 2 2'),(985,257,'d) Compilation Error'),(986,258,'a) 7 7'),(987,258,'b) 6 6'),(988,258,'c) 7 9'),(989,258,'d) 9 7'),(990,259,'a) 1 2'),(991,259,'b) 1 2 3'),(992,259,'c) 1 2 3 4'),(993,259,'d) 1 2 3 4 5'),(994,260,'a) 10 5'),(995,260,'b) 5 10'),(996,260,'c) 0 10'),(997,260,'d) 0 5'),(998,261,'a) class'),(999,261,'b) object'),(1000,261,'c) variable'),(1001,261,'d) character array'),(1002,262,'a) char()'),(1003,262,'b) Charat()'),(1004,262,'c) charat()'),(1005,262,'d) charAt()'),(1006,263,'a) upper'),(1007,263,'b) super'),(1008,263,'c) this'),(1009,263,'d) none of the mentioned'),(1010,264,'a) isequal()'),(1011,264,'b) isequals()'),(1012,264,'c) equal()'),(1013,264,'d) equals()'),(1014,265,'a) String is a class'),(1015,265,'b) Strings in java are mutable'),(1016,265,'c) Every string is an object of class String'),(1017,265,'d) Java defines a peer class of String, called StringBuffer, which allows string to be altered'),(1018,266,'a) I'),(1019,266,'b) like'),(1020,266,'c) Java'),(1021,266,'d) IlikeJava'),(1022,267,'a) I'),(1023,267,'b) L'),(1024,267,'c) K'),(1025,267,'d) E'),(1026,268,'a) 9'),(1027,268,'b) 10'),(1028,268,'c) 11'),(1029,268,'d) 12'),(1030,269,'a) hello hello'),(1031,269,'b) world world'),(1032,269,'c) hello world'),(1033,269,'d) world hello'),(1034,270,'a) false false'),(1035,270,'b) true true'),(1036,270,'c) true false'),(1037,270,'d) false true'),(1038,271,'a) main method'),(1039,271,'b) finalize method'),(1040,271,'c) static method'),(1041,271,'d) private method'),(1042,272,'a) Function overriding'),(1043,272,'b) Function overloading'),(1044,272,'c) Function doubling'),(1045,272,'d) None of the mentioned'),(1046,273,'a) Parameters data type'),(1047,273,'b) Number of parameters'),(1048,273,'c) Return type of method'),(1049,273,'d) All of the mentioned'),(1050,274,'a) void'),(1051,274,'b) int'),(1052,274,'c) float'),(1053,274,'d) both int and float'),(1054,275,'a) Two or more methods with same name can be differentiated on the basis of their parameters data type'),(1055,275,'b) Two or more method having same name can be differentiated on basis of number of parameters'),(1056,275,'c) Any already defined method in java library can be defined again in the program with different data type of parameters'),(1057,275,'d) If a method is returning a value the calling statement must have a variable to store that value'),(1058,276,'a) 0'),(1059,276,'b) 1'),(1060,276,'c) 6'),(1061,276,'d) 25'),(1062,277,'a) false'),(1063,277,'b) true'),(1064,277,'c) 0'),(1065,277,'d) 1'),(1066,278,'a) 0'),(1067,278,'b) 5'),(1068,278,'c) 25'),(1069,278,'d) 26'),(1070,279,'a) 1'),(1071,279,'b) 2'),(1072,279,'c) Runtime Error'),(1073,279,'d) Compilation Error'),(1074,280,'a) 0'),(1075,280,'b) 1'),(1076,280,'c) 25'),(1077,280,'d) 30'),(1078,281,'a) main()'),(1079,281,'b) recursive() method'),(1080,281,'c) Any method'),(1081,281,'d) System defined methods'),(1082,282,'a) Array'),(1083,282,'b) Stack'),(1084,282,'c) String'),(1085,282,'d) Integer'),(1086,283,'a) Infinite'),(1087,283,'b) Only 1'),(1088,283,'c) System Dependent'),(1089,283,'d) None of the mentioned'),(1090,284,'a) args is a String'),(1091,284,'b) args is a Character'),(1092,284,'c) args is an array of String'),(1093,284,'d) args in an array of Character'),(1094,285,'a) Yes'),(1095,285,'b) No'),(1096,285,'c) Compiler Dependent'),(1097,285,'d) Only ASCII characters can be converted'),(1098,286,'a) java'),(1099,286,'b) Output'),(1100,286,'c) This'),(1101,286,'d) is'),(1102,287,'a) java'),(1103,287,'b) is'),(1104,287,'c) This'),(1105,287,'d) command'),(1106,288,'a) This'),(1107,288,'b) java Output This is a command Line'),(1108,288,'c) This is a command Line'),(1109,288,'d) Compilation Error'),(1110,289,'a) java'),(1111,289,'b) 10'),(1112,289,'c) 20'),(1113,289,'d) error'),(1114,290,'a) java'),(1115,290,'b) 10'),(1116,290,'c) b'),(1117,290,'d) N'),(1118,291,'a) Compile time error'),(1119,291,'b) Compilation but runtime error'),(1120,291,'c) Compilation and output Rakesh :-Please pay Rs.2000'),(1121,291,'d) Compilation and output Sharma :-Please pay Rs.2000'),(1122,292,'a) The snippet compiles, runs and prints 0'),(1123,292,'b) The snippet compiles, runs and prints 1'),(1124,292,'c) The snippet does not compile'),(1125,292,'d) The snippet compiles and runs but does not print anything'),(1126,293,'a) 1 2'),(1127,293,'b) 2 3'),(1128,293,'c) 1 2 3'),(1129,293,'d) Compilation error'),(1130,294,'a) The snippet compiles, runs and prints “java demo”'),(1131,294,'b) The snippet compiles, runs and prints “java code”'),(1132,294,'c) The snippet compiles, runs and prints “demo code”'),(1133,294,'d) The snippet compiles, runs and prints “I code”'),(1134,295,'a) Compile time error'),(1135,295,'b) Output would be “hello”'),(1136,295,'c) Output would be “there”'),(1137,295,'d) Output would be “hello there”'),(1138,296,'a) Arguments tab'),(1139,296,'b) Variable tab'),(1140,296,'c) Cannot pass command line argument in Eclipse'),(1141,296,'d) Environment variable tab'),(1142,297,'a) Args'),(1143,297,'b) JCommander'),(1144,297,'c) Command Line'),(1145,297,'d) Input'),(1146,298,'a) @Input'),(1147,298,'b) @Variable'),(1148,298,'c) @Command Line'),(1149,298,'d) @Parameter'),(1150,299,'a) 2 512 3'),(1151,299,'b) 2 2 3'),(1152,299,'c) 512 2 3'),(1153,299,'d) 512 512 3'),(1154,300,'a) Allows multiple parameters to be passed'),(1155,300,'b) Allows one to put all your options into a file and pass this file as a parameter'),(1156,300,'c) Allows one to pass only one parameter'),(1157,300,'d) Allows one to pass one file containing only one parameter'),(1158,301,'a) Recursion is a class'),(1159,301,'b) Recursion is a process of defining a method that calls other methods repeatedly'),(1160,301,'c) Recursion is a process of defining a method that calls itself repeatedly'),(1161,301,'d) Recursion is a process of defining a method that calls other methods which in turn call again this method'),(1163,302,'a) Array'),(1164,302,'b) Stack'),(1165,302,'c) Queue'),(1166,302,'d) Tree'),(1167,303,'a) An infinite loop occurs'),(1168,303,'b) System stops the program after some time'),(1169,303,'c) After 1000000 calls it will be automatically stopped'),(1170,303,'d) None of the mentioned'),(1171,304,'a) A recursive method must have a base case'),(1172,304,'b) Recursion always uses stack'),(1173,304,'c) Recursive methods are faster that programmers written loop to call the function repeatedly using a stack'),(1174,304,'d) Recursion is managed by Java Runtime environment'),(1175,305,'a) java.lang'),(1176,305,'b) java.util'),(1177,305,'c) java.io'),(1178,305,'d) java.system'),(1179,306,'a) 0'),(1180,306,'b) 1'),(1181,306,'c) Compilation Error'),(1182,306,'d) Runtime Error'),(1183,307,'a) 0'),(1184,307,'b) 1'),(1185,307,'c) 120'),(1186,307,'d) None of the mentioned'),(1187,308,'a) 24'),(1188,308,'b) 30'),(1189,308,'c) 120'),(1190,308,'d) 720'),(1191,309,'a) 1'),(1192,309,'b) 30'),(1193,309,'c) 120'),(1194,309,'d) Runtime Error'),(1195,310,'a) 1'),(1196,310,'b) 30'),(1197,310,'c) 120'),(1198,310,'d) 720'),(1199,311,'a) super'),(1200,311,'b) this'),(1201,311,'c) extent'),(1202,311,'d) extends'),(1203,312,'a) Method overloading'),(1204,312,'b) Method overriding'),(1205,312,'c) Method hiding'),(1206,312,'d) None of the mentioned'),(1207,313,'a) static'),(1208,313,'b) constant'),(1209,313,'c) protected'),(1210,313,'d) final'),(1211,314,'a) super(void);'),(1212,314,'b) superclass.();'),(1213,314,'c) super.A();'),(1214,314,'d) super();'),(1215,315,'a) final, native, private'),(1216,315,'b) final, static, protected'),(1217,315,'c) final, private, abstract'),(1218,315,'d) final, static, public'),(1219,316,'a) Abstraction'),(1220,316,'b) Encapsulation'),(1221,316,'c) Polymorphism'),(1222,316,'d) None of the mentioned'),(1223,317,'a) 2'),(1224,317,'b) 3'),(1225,317,'c) 7'),(1226,317,'d) Compilation Error'),(1227,318,'a) 2 2'),(1228,318,'b) 3 3'),(1229,318,'c) Runtime Error'),(1230,318,'d) Compilation Error'),(1231,319,'a) Compilation error'),(1232,319,'b) An exception is thrown at run time'),(1233,319,'c) The variable first is set to null'),(1234,319,'d) The variable first is set to elements[0]'),(1235,320,'a) 1'),(1236,320,'b) 2'),(1237,320,'c) 3'),(1238,320,'d) 4'),(1239,321,'a) String class'),(1240,321,'b) Object class'),(1241,321,'c) Abstract class'),(1242,321,'d) ArrayList class'),(1243,322,'a) Objectcopy()'),(1244,322,'b) copy()'),(1245,322,'c) Object clone()'),(1246,322,'d) clone()'),(1247,323,'a) get()'),(1248,323,'b) void getclass()'),(1249,323,'c) Class getclass()'),(1250,323,'d) None of the mentioned'),(1251,324,'a) super'),(1252,324,'b) constant'),(1253,324,'c) class'),(1254,324,'d) final'),(1255,325,'a) abstract'),(1256,325,'b) extends'),(1257,325,'c) abstract and extends'),(1258,325,'d) none of the mentioned'),(1259,326,'a) Object class'),(1260,326,'b) abstract class'),(1261,326,'c) ArrayList class'),(1262,326,'d) None of the mentioned'),(1263,327,'a) 0'),(1264,327,'b) 2'),(1265,327,'c) Runtime Error'),(1266,327,'d) Compilation Error'),(1267,328,'a) false'),(1268,328,'b) true'),(1269,328,'c) 1'),(1270,328,'d) Compilation Error'),(1271,329,'a) Object'),(1272,329,'b) class Object'),(1273,329,'c) class java.lang.Object'),(1274,329,'d) Compilation Error'),(1275,330,'a) true'),(1276,330,'b) false'),(1277,330,'c) String associated with obj1'),(1278,330,'d) Compilation Error'),(1279,331,'a) abst'),(1280,331,'b) abstract'),(1281,331,'c) Abstract'),(1282,331,'d) abstract class'),(1283,332,'a) Thread'),(1284,332,'b) AbstractList'),(1285,332,'c) List'),(1286,332,'d) None of the mentioned'),(1287,333,'a) Abstract'),(1288,333,'b) A simple class'),(1289,333,'c) Static class'),(1290,333,'d) None of the mentioned'),(1291,334,'a) Every class containing abstract method must be declared abstract'),(1292,334,'b) Abstract class defines only the structure of the class not its implementation'),(1293,334,'c) Abstract class can be initiated by new operator'),(1294,334,'d) Abstract class can be inherited'),(1295,335,'a) java.lang'),(1296,335,'b) java.util'),(1297,335,'c) java.io'),(1298,335,'d) java.system'),(1299,336,'a) 2 2'),(1300,336,'b) 3 3'),(1301,336,'c) Runtime Error'),(1302,336,'d) Compilation Error'),(1303,337,'a) 1 2'),(1304,337,'b) 2 1'),(1305,337,'c) Runtime Error'),(1306,337,'d) Compilation Error'),(1307,338,'a) 0'),(1308,338,'b) 1'),(1309,338,'c) 2'),(1310,338,'d) Compilation Error'),(1311,339,'a) 1 2'),(1312,339,'b) 2 1'),(1313,339,'c) 1 3'),(1314,339,'d) 3 1'),(1315,340,'a) super'),(1316,340,'b) this'),(1317,340,'c) extent'),(1318,340,'d) extends'),(1319,341,'a) public member'),(1320,341,'b) private member'),(1321,341,'c) protected member'),(1322,341,'d) static member'),(1323,342,'a) class B + class A {}'),(1324,342,'b) class B inherits class A {}'),(1325,342,'c) class B extends A {}'),(1326,342,'d) class B extends class A {}'),(1327,343,'a) B,E'),(1328,343,'b) A,C'),(1329,343,'c) C,E'),(1330,343,'d) T,H'),(1331,344,'a) 0'),(1332,344,'b) 1'),(1333,344,'c) 2'),(1334,344,'d) Compilation Error'),(1335,345,'a) 2 2'),(1336,345,'b) 3 3'),(1337,345,'c) 2 3'),(1338,345,'d) 3 2'),(1339,346,'a) 1 2'),(1340,346,'b) 2 1'),(1341,346,'c) Runtime Error'),(1342,346,'d) Compilation Error'),(1343,347,'a) Single inheritance'),(1344,347,'b) Double inheritance'),(1345,347,'c) Hierarchical inheritance'),(1346,347,'d) Multiple inheritance'),(1347,348,'a) Interfaces'),(1348,348,'b) Multithreading'),(1349,348,'c) Protected methods'),(1350,348,'d) Private methods'),(1351,349,'a) java.lang.class'),(1352,349,'b) java.class.inherited'),(1353,349,'c) java.class.object'),(1354,349,'d) java.lang.Object'),(1355,350,'a) Protected'),(1356,350,'b) Private'),(1357,350,'c) Public'),(1358,350,'d) Static'),(1359,351,'a) super'),(1360,351,'b) this'),(1361,351,'c) upper'),(1362,351,'d) classname'),(1363,352,'a) True'),(1364,352,'b) False'),(1365,353,'a) inherited'),(1366,353,'b) using'),(1367,353,'c) extends'),(1368,353,'d) implements'),(1369,354,'a) inherited'),(1370,354,'b) using'),(1371,354,'c) extends'),(1372,354,'d) implements'),(1373,355,'a) Runtime error'),(1374,355,'b) Compile time error'),(1375,355,'c) Code runs successfully'),(1376,355,'d) First called method is executed successfully'),(1377,356,'a) True'),(1378,356,'b) False'),(1379,357,'a) java.util'),(1380,357,'b) java.lang'),(1381,357,'c) ArrayList'),(1382,357,'d) None of the mentioned'),(1383,358,'a) +'),(1384,358,'b) +='),(1385,358,'c) &'),(1386,358,'d) ||'),(1387,359,'a) get()'),(1388,359,'b) Sizeof()'),(1389,359,'c) lengthof()'),(1390,359,'d) length()'),(1391,360,'a) CHARAT()'),(1392,360,'b) chatat()'),(1393,360,'c) charAt()'),(1394,360,'d) ChatAt()'),(1395,361,'a) String()'),(1396,361,'b) String(void)'),(1397,361,'c) String(0)'),(1398,361,'d) None of the mentioned'),(1399,362,'a) String objects are immutable, they cannot be changed'),(1400,362,'b) String object can point to some other reference of String variable'),(1401,362,'c) StringBuffer class is used to store string in a buffer for later use'),(1402,362,'d) None of the mentioned'),(1403,363,'a) a'),(1404,363,'b) b'),(1405,363,'c) c'),(1406,363,'d) abc'),(1407,364,'a) ABC'),(1408,364,'b) BCD'),(1409,364,'c) CDA'),(1410,364,'d) ABCD'),(1415,365,'a) 3 0'),(1416,365,'b) 0 3'),(1417,365,'c) 3 4'),(1418,365,'d) 4 3'),(1419,367,'a) getchars()'),(1420,367,'b) GetChars()'),(1421,367,'c) Getchars()'),(1422,367,'d) getChars()'),(1423,368,'a) getBytes()'),(1424,368,'b) GetByte()'),(1425,368,'c) giveByte()'),(1426,368,'d) Give Bytes()'),(1427,369,'a) any class'),(1428,369,'b) only the Target class'),(1429,369,'c) any class in the test package'),(1430,369,'d) any class that extends Target'),(1431,370,'a) The value “4” is printed at the command line'),(1432,370,'b) Compilation fails because of an error in line'),(1433,370,'c) A NullPointerException occurs at runtime'),(1434,370,'d) An IllegalStateException occurs at runtime'),(1435,371,'a) charAt()'),(1436,371,'b) both getChars() & charAt()'),(1437,371,'c) both toCharArray() & getChars()'),(1438,371,'d) all of the mentioned'),(1439,372,'a) Hello, i love java'),(1440,372,'b) i love ja'),(1441,372,'c) lo i lo'),(1442,372,'d) llo i l'),(1443,373,'a) 6 4 6 9'),(1444,373,'b) 5 4 5 9'),(1445,373,'c) 7 8 8 9'),(1446,373,'d) 4 3 6 9'),(1447,374,'a) a is a lower case Letter\n      is White space character'),(1448,374,'b) b is a lower case Letter\n      is White space character'),(1449,374,'c) a is a lower case Letter\n    A is an upper case Letter'),(1450,374,'d) a is a lower case Letter\n    0 is a digit'),(1451,375,'a) h'),(1452,375,'b) e'),(1453,375,'c) l'),(1454,375,'d) o'),(1455,376,'a) equals()'),(1456,376,'b) Equals()'),(1457,376,'c) isequal()'),(1458,376,'d) Isequal()'),(1459,377,'a) regionMatch()'),(1460,377,'b) match()'),(1461,377,'c) RegionMatches()'),(1462,377,'d) regionMatches()'),(1463,378,'a) startsWith()'),(1464,378,'b) endsWith()'),(1465,378,'c) Starts()'),(1466,378,'d) ends()'),(1467,379,'a) zero'),(1468,379,'b) value less than zero'),(1469,379,'c) value greater than zero'),(1470,379,'d) none of the mentioned'),(1471,380,'a) char'),(1472,380,'b) int'),(1473,380,'c) boolean'),(1474,380,'d) all of the mentioned'),(1475,381,'a) true'),(1476,381,'b) false'),(1477,381,'c) 0'),(1478,381,'d) 1'),(1479,382,'a) true true'),(1480,382,'b) false false'),(1481,382,'c) true false'),(1482,382,'d) false true'),(1483,383,'a) true true'),(1484,383,'b) false false'),(1485,383,'c) true false'),(1486,383,'d) false true'),(1487,384,'a) sb1.append(“abc”); s1.append(“abc”);'),(1488,384,'b) sb1.append(“abc”); s1.concat(“abc”);'),(1489,384,'c) sb1.concat(“abc”); s1.append(“abc”);'),(1490,384,'d) sb1.append(“abc”); s1 = s1.concat(“abc”);'),(1491,385,'a) ab'),(1492,385,'b) bc'),(1493,385,'c) ca'),(1494,385,'d) ac'),(1495,386,'a) substring()'),(1496,386,'b) Substring()'),(1497,386,'c) SubString()'),(1498,386,'d) None of the mentioned'),(1499,387,'a) one'),(1500,387,'b) two'),(1501,387,'c) onetwo'),(1502,387,'d) twoone'),(1503,388,'a) startsWith()'),(1504,388,'b) trim()'),(1505,388,'c) Trim()'),(1506,388,'d) doTrim()'),(1507,389,'a) zero'),(1508,389,'b) value less than zero'),(1509,389,'c) value greater than zero'),(1510,389,'d) none of the mentioned'),(1511,390,'a) replace() method replaces all occurrences of one character in invoking string with another character'),(1512,390,'b) replace() method replaces only first occurrences of a character in invoking string with another character'),(1513,390,'c) replace() method replaces all the characters in invoking string with another character'),(1514,390,'d) replace() replace() method replaces last occurrence of a character in invoking string with another character'),(1515,391,'a) “”Hello World””'),(1516,391,'b) “”Hello World”'),(1517,391,'c) “Hello World”'),(1518,391,'d) Hello world'),(1519,392,'a) one'),(1520,392,'b) two'),(1521,392,'c) one two'),(1522,392,'d) compilation error'),(1523,393,'a) hello'),(1524,393,'b) helwo'),(1525,393,'c) hewlo'),(1526,393,'d) hewwo'),(1527,394,'a) Hell'),(1528,394,'b) Hello'),(1529,394,'c) Worl'),(1530,394,'d) World'),(1531,395,'a) 4 8'),(1532,395,'b) 5 9'),(1533,395,'c) 4 9'),(1534,395,'d) 5 8'),(1535,396,'a) String()'),(1536,396,'b) StringBuffer()'),(1537,396,'c) String() & StringBuffer()'),(1538,396,'d) None of the mentioned'),(1539,397,'a) concat()'),(1540,397,'b) append()'),(1541,397,'c) join()'),(1542,397,'d) concatenate()'),(1543,398,'a) length()'),(1544,398,'b) Length()'),(1545,398,'c) capacity()'),(1546,398,'d) Capacity()'),(1547,399,'a) Hell'),(1548,399,'b) ello'),(1549,399,'c) Hel'),(1550,399,'d) llo'),(1551,400,'a) reverse() method reverses all characters'),(1552,400,'b) reverseall() method reverses all characters'),(1553,400,'c) replace() method replaces first occurrence of a character in invoking string with another character'),(1554,400,'d) replace() method replaces last occurrence of a character in invoking string with another character'),(1555,401,'a) 6 4 6 9'),(1556,401,'b) 5 4 5 9'),(1557,401,'c) 7 8 8 9'),(1558,401,'d) 1 14 8 15'),(1559,402,'a) He'),(1560,402,'b) Hel'),(1561,402,'c) lo'),(1562,402,'d) llo'),(1563,403,'a) Hello'),(1564,403,'b) World'),(1565,403,'c) Helloworld'),(1566,403,'d) Hello World'),(1567,404,'a) Hello'),(1568,404,'b) olleH'),(1569,404,'c) HelloolleH'),(1570,404,'d) olleHHello'),(1571,405,'a) a is a lower case Letter\n     is White space character'),(1572,405,'b) b is a lower case Letter\n     is White space character'),(1573,405,'c) 1 is a digit\n   a is a lower case Letter'),(1574,405,'d) a is a lower case Letter\n   0 is a digit'),(1575,406,'a) substring()'),(1576,406,'b) Substring()'),(1577,406,'c) SubString()'),(1578,406,'d) None of the mentioned'),(1579,407,'a) one'),(1580,407,'b) two'),(1581,407,'c) onetwo'),(1582,407,'d) twoone'),(1583,408,'a) reverse()'),(1584,408,'b) reverseall()'),(1585,408,'c) Reverse()'),(1586,408,'d) reverseAll()'),(1587,409,'a) length()'),(1588,409,'b) capacity()'),(1589,409,'c) Length()'),(1590,409,'d) Capacity()'),(1591,410,'a) StringBuffer()'),(1592,410,'b) StringBuffer(int size)'),(1593,410,'c) StringBuffer(String str)'),(1594,410,'d) StringBuffer(int size , String str)'),(1595,411,'a) 4'),(1596,411,'b) 5'),(1597,411,'c) 6'),(1598,411,'d) 7'),(1599,412,'a) Hello java'),(1600,412,'b) Hellojava'),(1601,412,'c) HJavalo'),(1602,412,'d) Hjava'),(1603,413,'a) xello'),(1604,413,'b) xxxxx'),(1605,413,'c) Hxllo'),(1606,413,'d) Hexlo'),(1607,414,'a) HelloGoodWorld'),(1608,414,'b) HellGoodoWorld'),(1609,414,'c) HellGood oWorld'),(1610,414,'d) Hello Good World'),(1611,415,'a) hello'),(1612,415,'b) java'),(1613,415,'c) Hello Java'),(1614,415,'d) HJavaello');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `questions`
--

DROP TABLE IF EXISTS `questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `questions` (
  `id` int DEFAULT NULL,
  `theme_id` int DEFAULT NULL,
  `subtheme_id` int DEFAULT NULL,
  `question_number` int DEFAULT NULL,
  `question_text` text,
  `correct_answer` text,
  `explanation` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `questions`
--

LOCK TABLES `questions` WRITE;
/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` VALUES (1,1,1,1,'What is the range of short data type in Java?','b','Short occupies 16 bits in memory. Its range is from -32768 to 32767.'),(2,1,1,2,'What is the range of byte data type in Java?','a','Byte occupies 8 bits in memory. Its range is from -128 to 127.'),(3,1,1,3,'Which of the following are legal lines of Java code?\n1. int w = (int)888.8;\n   2. byte x = (byte)100L;\n   3. long y = (byte)100;\n   4. byte z = (byte)100L;','d','Statements (1), (2), (3), and (4) are correct. (1) is correct because when a floating-point number (a double in this case) is cast to an int, it simply loses the digits after the decimal. (2) and (4) are correct because a long can be cast into a byte. If the long is over 127, it loses its most significant (leftmost) bits. (3) actually works, even though a cast is not necessary, because a long can store a byte.'),(4,1,1,4,'An expression involving byte, int, and literal numbers is promoted to which of these?','a','An expression involving bytes, ints, shorts, literal numbers, the entire expression is promoted to int before any calculation is done'),(5,1,1,5,'Which of these literals can be contained in float data type variable?','b','Range of float data type is -(3.4e38) To +(3.4e38).'),(6,1,1,6,'Which data type value is returned by all transcendental math functions?','c','Only double data type value is returned by all transcendental math functions. Transcendental math functions don’t return int or long. They return double instead of float as double has larger range.'),(7,1,1,7,'What will be the output of the following Java code? \nclass average {\n        public static void main(String args[])\n        {\n            double num[] = {5.5, 10.1, 11, 12.8, 56.9, 2.5};\n            double result;\n            result = 0;\n            for (int i = 0; i < 6; ++i) \n                result = result + num[i];\n	    System.out.print(result/6);\n \n        } \n    }','c','None.\noutput:\n$ javac average.java\n$ java average\n16.46666666666667'),(8,1,1,8,'What will be the output of the following Java statement? \nclass output {\n        public static void main(String args[]) \n        {\n            double a, b,c;\n            a = 3.0/0;\n            b = 0/4.0;\n            c=0/0.0;\n \n	    System.out.println(a);\n            System.out.println(b);\n            System.out.println(c);\n        } \n    }','d','For floating point literals, we have constant value to represent (10/0.0) infinity either positive or negative and also have NaN (not a number for undefined like 0/0.0), but for the integral type, we don’t have any constant that’s why we get an arithmetic exception.'),(9,1,1,9,'What will be the output of the following Java code? \nclass increment {\n        public static void main(String args[]) \n        {        \n             int g = 3;\n             System.out.print(++g * 8);\n        } \n    }','c','Operator ++ has more preference than *, thus g becomes 4 and when multiplied by 8 gives 32.\noutput:\n$ javac increment.java\n$ java increment\n32'),(11,1,1,10,'What will be the output of the following Java code? \nclass area {\n        public static void main(String args[]) \n        {    \n             double r, pi, a;\n             r = 9.8;\n             pi = 3.14;\n             a = pi * r * r;\n             System.out.println(a);\n        } \n    }','a','None.\noutput:\n$ javac area.java\n$ java area\n301.5656'),(12,1,2,1,'What is the numerical range of a char data type in Java?','d','Char occupies 16-bit in memory, so it supports 216 i:e from 0 to 65535.'),(13,1,2,2,'Which of these coding types is used for data type characters in Java?','c','Unicode defines fully international character set that can represent all the characters found in all human languages. Its range is from 0 to 65536.'),(14,1,2,3,'Which of these values can a boolean variable contain?','a','Boolean variable can contain only one of two possible values, true and false.'),(15,1,2,4,'Which of these occupy first 0 to 127 in Unicode character set used for characters in Java?','d','First 0 to 127 character set in Unicode are same as those of ISO-LATIN-1 and ASCII.'),(16,1,2,5,'Which one is a valid declaration of a boolean?','c','Boolean can only be assigned true or false literals.'),(17,1,2,6,'What will be the output of the following Java program?\nclass array_output {\n        public static void main(String args[]) \n        {    \n            char array_variable [] = new char[10];\n	    for (int i = 0; i < 10; ++i) {\n                array_variable[i] = i;\n                System.out.print(array_variable[i] + \"\" );\n                i++;\n            }\n        } \n    }','a','Explanation: None.\noutput:\n$ javac array_output.java\n$ java array_output\ni i i i i'),(18,1,2,7,'What will be the output of the following Java program?\nclass mainclass {\n        public static void main(String args[]) \n        {\n            char a = A;\n            a++;\n	    System.out.print((int)a);\n        } \n    }','a','Explanation: ASCII value of ‘A’ is 65, on using ++ operator character value increments by one.\noutput:\n$ javac mainclass.java\n$ java mainclass\n66'),(19,1,2,8,'What will be the output of the following Java program?\nclass mainclass {\n        public static void main(String args[]) \n        {\n            boolean var1 = true;\n	    boolean var2 = false;\n	    if (var1)\n	        System.out.println(var1);\n	    else\n	        System.out.println(var2);\n       } \n    }','c','None.\noutput:\n$ javac mainclass.java\n$ java mainclass\ntrue'),(20,1,2,9,'What will be the output of the following Java code?\nclass booloperators {\n        public static void main(String args[]) \n        {\n            boolean var1 = true;\n	    boolean var2 = false;\n	    System.out.println((var1 & var2));\n        } \n    }','d','boolean ‘&’ operator always returns true or false. It returns true when both the values are true and false otherwise. Since, var1 is defined true and var2 is defined false hence their ‘&’ operator result is false.\n    output:\n\n$ javac booloperators.java\n$ java booloperators\nfalse'),(29,1,2,10,'What will be the output of the following Java code?\nclass asciicodes {\n        public static void main(String args[]) \n        {\n            char var1 = \'A\';\n	    char var2 = \'a\';\n	    System.out.println((int)var1 + \" \" + (int)var2);\n        } \n    }','b','ASCII code for \'A\' is 65 and for \'a\' is 97.\noutput:\n$ javac asciicodes.java\n$ java asciicodes\n65 97'),(31,1,3,1,'What is the order of variables in Enum?','d','The order of appearance of variables in Enum is their natural order (the natural order means the order in which they are declared inside Enum type). However, the compareTo() method is implemented to order the variable in ascending order.'),(32,1,3,2,'Can we create an instance of Enum outside of Enum itself?','b','No, instances of Enum cannot be created outside of Enum boundary, because Enum does not have a public constructor.'),(33,1,3,3,'What will be the output of the following Java code?\nenum Season \n    {\n        WINTER, SPRING, SUMMER, FALL\n    };\n    System.out.println(Season.WINTER.ordinal());','a','ordinal() method provides number to the variables defined in Enum.'),(34,1,3,4,'If we try to add Enum constants to a TreeSet, what sorting order will it use','a','Tree Set will sort the values in the order in which Enum constants are declared.'),(35,1,3,5,'What will be the output of the following Java code snippet?\nclass A\n{\n \n}\n \nenum Enums extends A\n{\n    ABC, BCD, CDE, DEF;\n}','b','Enum types cannot extend class.'),(36,1,3,6,'What will be the output of the following Java code snippet?\nenum Levels \n{\n    private TOP,\n \n    public MEDIUM,\n \n    protected BOTTOM;\n}','d','Enum cannot have any modifiers. They are public, static and final by default.'),(37,1,3,7,'What will be the output of the following Java code snippet?\nenum Enums\n{\n    A, B, C;\n \n    private Enums()\n    {\n        System.out.println(10);\n    }\n}\n \npublic class MainClass\n{\n    public static void main(String[] args)\n    {\n        Enum en = Enums.B;\n    }\n}','a','The constructor of Enums is called which prints 10.'),(38,1,3,8,'Which method returns the elements of Enum class?','b','getEnumConstants() returns the elements of this enum class or null if this Class object does not represent an enum type.'),(39,1,3,9,'Which class does all the Enums extend?','c','All enums implicitly extend java.lang.Enum. Since Java does not support multiple inheritance, an enum cannot extend anything else.'),(40,1,3,10,'Are enums are type-safe?','a','Enums are type-safe as they have own name-space.'),(41,1,4,1,'Which of the following is the advantage of BigDecimal over double?','d','BigDecimal has unnatural syntax, needs more memory and creates a great amount of garbage. But it has a high precision which is useful for some calculations like money.'),(42,1,4,2,'Which of the below data type doesn’t support overloaded methods for +,-,* and /?','d','int, float, double provide overloaded methods for +,-,* and /. BigDecimal does not provide these overloaded methods.'),(43,1,4,3,'What will be the output of the following Java code snippet?\ndouble a = 0.02;\n   double b = 0.03;\n   double c = b - a;\n   System.out.println(c);\n \n   BigDecimal _a = new BigDecimal(\"0.02\");\n   BigDecimal _b = new BigDecimal(\"0.03\");\n   BigDecimal _c = b.subtract(_a);\n   System.out.println(_c);','a','BigDecimal provides more precision as compared to double. Double is faster in terms of performance as compared to BigDecimal.'),(44,1,4,4,'What is the base of BigDecimal data type?','c','A BigDecimal is n*10^scale where n is an arbitrary large signed integer. Scale can be thought of as the number of digits to move the decimal point to left or right.'),(45,1,4,5,'What is the limitation of toString() method of BigDecimal?','d','toString() of BigDecimal uses scientific notation to represent numbers known as canonical representation. We must use toPlainString() to avoid scientific notation.'),(46,1,4,6,'Which of the following is not provided by BigDecimal?','b','toBigInteger() converts BigDecimal to a BigInteger.toBigIntegerExact() converts this BigDecimal to a BigInteger by checking for lost information.'),(47,1,4,7,'BigDecimal is a part of which package?','b','BigDecimal is a part of java.math. This package provides various classes for storing numbers and mathematical operations.'),(48,1,4,8,'What is BigDecimal.ONE?','d','BigDecimal is a part of java.math. This package provides various classes for storing numbers and mathematical operations.BigDecimal.ONE is a static variable of BigDecimal class with value 1 on scale 0.'),(49,1,4,9,'Which class is a library of functions to perform arithmetic operations of BigInteger and BigDecimal?','a','MathContext class is a library of functions to perform arithmetic operations of BigInteger and BigDecimal.'),(50,1,4,10,'What will be the output of the following Java code snippet?\npublic class AddDemo \n{\n	public static void main(String args[]) \n        {\n		BigDecimal b = new BigDecimal(\"23.43\");\n		BigDecimal br = new BigDecimal(\"24\");\n		BigDecimal bres = b.add(new BigDecimal(\"450.23\"));\n		System.out.println(\"Add: \"+bres);\n \n		MathContext mc = new MathContext(2, RoundingMode.DOWN);\n		BigDecimal bdecMath = b.add(new BigDecimal(\"450.23\"), mc);\n		System.out.println(\"Add using MathContext: \"+bdecMath);\n	}\n}','b','add() adds the two numbers, MathContext provides library for carrying out various arithmetic operations.'),(51,1,5,1,'How to format date from one form to another?','a','SimpleDateFormat can be used as\nDate now = new Date();\nSimpleDateFormat sdf = new SimpleDateFormat (\"yyyy-mm-dd\'T\'hh:MM:ss\");\nString nowStr = sdf.format(now);\nSystem.out.println(\"Current Date: \" + );'),(52,1,5,2,'How to convert Date object to String?','b','SimpleDateFormat takes a string containing pattern. sdf.format converts the Date object to String.'),(53,1,5,3,'How to convert a String to a Date object?','a','SimpleDateFormat takes a string containing pattern. sdf.parse converts the String to Date object.'),(54,1,5,4,'Is SimpleDateFormat thread safe?','b','SimpleDateFormat is not thread safe. In the multithreaded environment, we need to manage threads explicitly.'),(55,1,5,5,'How to identify if a timezone is eligible for DayLight Saving?','c','public abstract boolean useDaylightTime() is provided in TimeZone class.'),(56,1,5,6,'How to identify if a timezone is eligible for DayLight Saving?','a','In java 8, we are asked to migrate to java.time (JSR-310) which is a core part of the JDK which replaces joda library project.'),(57,1,5,7,'How is Date stored in database?','a','java.sql.Date is the datatype of Date stored in database.'),(58,1,5,8,'What does LocalTime represent?','b','LocalTime of joda library represents time without date.'),(59,1,5,9,'How to get difference between two dates?','a','Java 8 provides a method called between which provides Duration between two times.'),(60,1,5,10,'How to get UTC time?','c','In java 8, Instant.now() provides current time in UTC/GMT.'),(61,1,6,1,'Which of these is long data type literal?','a','Data type long literals are appended by an upper or lowercase L. 0x99fffL is hexadecimal long literal.'),(62,1,6,2,'Which of these can be returned by the operator &?','d','We can use binary ampersand operator on integers/chars (and it returns an integer) or on booleans (and it returns a boolean).'),(63,1,6,3,'Literals in java must be appended by which of these?','d','Data type long literals are appended by an upper or lowercase L.'),(64,1,6,4,'Literal can be of which of these data types?','d','None.'),(65,1,6,5,'Which of these can not be used for a variable name in Java?','b','Keywords are specially reserved words which can not be used for naming a user defined variable, example: class, int, for etc.'),(66,1,6,6,'What will be the output of the following Java program?\nclass evaluate \n    {\n        public static void main(String args[]) \n        {\n            int a[] = {1,2,3,4,5};\n	    int d[] = a;\n	    int sum = 0;\n	    for (int j = 0; j < 3; ++j)\n                sum += (a[j] * d[j + 1]) + (a[j + 1] * d[j]);\n	    System.out.println(sum);\n        } \n    }','c','None.\noutput:\n$ javac evaluate.java\n$ java evaluate\n40'),(67,1,6,7,'What will be the output of the following Java program?','b','When an array is declared using new operator then all of its elements are initialized to 0 automatically. for loop body is executed 5 times as whenever controls comes in the loop i value is incremented twice, first by i++ in body of loop then by ++i in increment condition of for loop.\noutput:\n$ javac array_output.java\n$ java array_output\n1 2 3 4 5'),(68,1,6,8,'What will be the output of the following Java program?\nclass variable_scope \n    {\n        public static void main(String args[]) \n        {\n            int x;\n            x = 5;\n            {\n	        int y = 6;\n	        System.out.print(x + \" \" + y);\n            }\n            System.out.println(x + \" \" + y);\n        } \n    }','d','Second print statement doesn’t have access to y , scope y was limited to the block defined after initialization of x.\noutput:\n$ javac variable_scope.java\nException in thread \"main\" java.lang.Error: Unresolved compilation problem: y cannot be resolved to a variable'),(69,1,6,9,'Which of these is an incorrect string literal?','d','All string literals must begin and end in the same line.'),(70,1,6,10,'What will be the output of the following Java program?','a','Variable c has been dynamically initialized to square root of a * a + b * b, during run time.\noutput:\n$ javac dynamic_initialization.java\n$ java dynamic_initialization\n5.0'),(71,1,7,1,'Which of these is necessary condition for automatic type conversion in Java?','b','None.'),(72,1,7,2,'What is the prototype of the default constructor of this Java class?\npublic class prototype { }','d','None.'),(73,1,7,3,'What will be the error in the following Java code?\nbyte b = 50;\n    b = b * 50;','b','While evaluating an expression containing int, bytes or shorts, the whole expression is converted to int then evaluated and the result is also of type int.'),(74,1,7,4,'If an expression contains double, int, float, long, then the whole expression will be promoted into which of these data types?','c','If any operand is double the result of an expression is double.'),(75,1,7,5,'What is Truncation in Java?','a','Truncate means to trim some digits of a floating type number or a double type number from right. We can also truncate the decimal portion completely making it an integer type number.'),(76,1,7,6,'What will be the output of the following Java code?\nclass char_increment \n    {\n        public static void main(String args[]) \n        {\n            char c1 = \'D\';\n            char c2 = 84;\n            c2++;\n            c1++;\n            System.out.println(c1 + \" \"  + c2);\n        } \n    }','a','Operator ++ increments the value of character by 1. c1 and c2 are given values D and 84, when we use ++ operator their values increments by 1, c1 and c2 becomes E and U respectively.\noutput:\n$ javac char_increment.java\n$ java char_increment\nE U'),(77,1,7,7,'What will be the output of the following Java code?\nclass conversion \n    {\n        public static void main(String args[]) \n        {\n            double a = 295.04;\n            int  b = 300;\n            byte c = (byte) a;\n            byte d = (byte) b;\n            System.out.println(c + \" \"  + d);\n        } \n    }','b','Type casting a larger variable into a smaller variable results in modulo of larger variable by range of smaller variable. b contains 300 which is larger than byte’s range i:e -128 to 127 hence d contains 300 modulo 256 i:e 44.\noutput:\n$ javac conversion.java\n$ java conversion\n39 44'),(78,1,7,8,'What will be the output of the following Java code?\nclass A \n    {\n        final public int calculate(int a, int b) { return 1; } \n    } \n    class B extends A \n    { \n        public int calculate(int a, int b) { return 2; } \n    } \n     public class output \n     {\n        public static void main(String args[]) \n        { \n            B object = new B(); \n            System.out.print(\"b is \" + b.calculate(0, 1));  \n        } \n    }','c','The code does not compile because the method calculate() in class A is final and so cannot be overridden by method of class b.'),(79,1,7,9,'What will be the output of the following Java program, if we run as “java main_arguments 1 2 3”?\nclass main_arguments \n    {\n        public static void main(String [] args) \n        {\n            String [][] argument = new String[2][2];\n            int x;\n            argument[0] = args;\n            x = argument[0].length;\n            for (int y = 0; y < x; y++) \n                System.out.print(\" \" + argument[0][y]);              \n        }\n    }','d','In argument[0] = args;, the reference variable arg[0], which was referring to an array with two elements, is reassigned to an array (args) with three elements.\nOutput:\n$ javac main_arguments.java\n$ java main_arguments\n1 2 3'),(80,1,7,10,'What will be the output of the following Java program?\nclass c \n    {    \n        public void main( String[] args ) \n        {  \n            System.out.println( \"Hello\" + args[0] ); \n        } \n    }','d','A runtime error will occur owning to the main method of the code fragment not being declared static.\nOutput:\n$ javac c.java\nException in thread \"main\" java.lang.NoSuchMethodError: main'),(81,1,8,1,'Which of these operators is used to allocate memory to array variable in Java?','c','Operator new allocates a block of memory specified by the size of an array, and gives the reference of memory allocated to the array variable.'),(82,1,8,2,'Which of these is an incorrect array declaration?','d','Operator new must be succeeded by array type and array size.'),(83,1,8,3,'What will be the output of the following Java code?\nint arr[] = new int [5];\n    System.out.print(arr);','d','If we trying to print any reference variable internally, toString() will be called which is implemented to return the String in following form:\nclassname@hashcode in hexadecimal form'),(84,1,8,4,'Which of these is an incorrect Statement?','a','Array can be initialized using both new and comma separated expressions surrounded by curly braces example : int arr[5] = new int[5]; and int arr[] = { 0, 1, 2, 3, 4};'),(85,1,8,5,'Which of these is necessary to specify at time of array initialization?','a','None.'),(86,1,8,6,'What will be the output of the following Java code?\nclass array_output \n    {\n        public static void main(String args[]) \n        {\n            int array_variable [] = new int[10];\n	    for (int i = 0; i < 10; ++i) \n            {\n                array_variable[i] = i;\n                System.out.print(array_variable[i] + \" \");\n                i++;\n            }\n        } \n    }','a','When an array is declared using new operator then all of its elements are initialized to 0 automatically. for loop body is executed 5 times as whenever controls comes in the loop i value is incremented twice, first by i++ in body of loop then by ++i in increment condition of for loop.\noutput:\n$ javac array_output.java\n$ java array_output\n0 2 4 6 8'),(87,1,8,7,'What will be the output of the following Java code?\nclass multidimention_array \n    {\n        public static void main(String args[])\n        {\n            int arr[][] = new int[3][];\n            arr[0] = new int[1];\n            arr[1] = new int[2];\n            arr[2] = new int[3];               \n	    int sum = 0;\n	    for (int i = 0; i < 3; ++i) \n	        for (int j = 0; j < i + 1; ++j)\n                    arr[i][j] = j + 1;\n	    for (int i = 0; i < 3; ++i) \n	        for (int j = 0; j < i + 1; ++j)\n                    sum + = arr[i][j];\n	    System.out.print(sum); 	\n        } \n    }','b','arr[][] is a 2D array, array has been allotted memory in parts. 1st row contains 1 element, 2nd row contains 2 elements and 3rd row contains 3 elements. each element of array is given i + j value in loop. sum contains addition of all the elements of the array.\noutput:\n$ javac multidimention_array.java\n$ java multidimention_array\n10'),(88,1,8,8,'What will be the output of the following Java code?\nclass evaluate \n    {\n        public static void main(String args[]) \n            {\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};\n	        int n = 6;\n                n = arr[arr[n] / 2];\n	        System.out.println(arr[n] / 2);\n            } \n    }','d','Array arr contains 10 elements. n contains 6 thus in next line n is given value 3 printing arr[3]/2 i:e 3/2 = 1 because of int Value, by int values there is no rest. If this values would be float the result would be 1.5.\noutput:\n$ javac evaluate.java\n$ java evaluate\n1'),(89,1,8,9,'What will be the output of the following Java code?\nclass array_output \n    {\n        public static void main(String args[]) \n        {\n            char array_variable [] = new char[10];\n	    for (int i = 0; i < 10; ++i) \n            {\n                array_variable[i] = \'i\';\n                System.out.print(array_variable[i] + \"\");\n            }\n        } \n    }','d','None.\noutput:\n$ javac array_output.java\n$ java array_output\ni i i i i i i i i i'),(90,1,8,10,'What will be the output of the following Java code?\nclass array_output \n    {\n        public static void main(String args[]) \n        {\n            int array_variable[][] = {{ 1, 2, 3}, { 4 , 5, 6}, { 7, 8, 9}};\n            int sum = 0;\n            for (int i = 0; i < 3; ++i)\n                for (int j = 0; j <  3 ; ++j)\n                    sum = sum + array_variable[i][j];\n            System.out.print(sum / 5);\n        } \n    }','b','None.\noutput:\n$ javac array_output.java\n$ java array_output\n9'),(91,2,9,1,'Which of the following can be operands of arithmetic operators?','d','The operand of arithmetic operators can be any of numeric or character type, But not boolean.'),(92,2,9,2,'Modulus operator, %, can be applied to which of these?','c','Modulus operator can be applied to both integers and floating point numbers.'),(93,2,9,3,'With x = 0, which of the following are legal lines of Java code for changing the value of x to 1?\n 1. x++;\n   2. x = x + 1;\n   3. x += 1;\n   4. x =+ 1;','c','Operator ++ increases value of variable by 1. x = x + 1 can also be written in shorthand form as x += 1. Also x =+ 1 will set the value of x to 1.'),(94,2,9,4,'Decrement operator, −−, decreases the value of variable by what number?','a','None.'),(95,2,9,5,'Which of these statements are incorrect?','d','None.'),(96,2,9,6,'What will be the output of the following Java program?\nclass increment \n    {\n        public static void main(String args[])\n        {\n            double var1 = 1 + 5; \n            double var2 = var1 / 4;\n            int var3 = 1 + 5;\n            int var4 = var3 / 4;\n            System.out.print(var2 + \" \" + var4);\n \n        } \n    }','c','None.\noutput:\n$ javac increment.java\n$ java increment\n1.5 1'),(97,2,9,7,'What will be the output of the following Java program?\nclass Modulus \n    {\n        public static void main(String args[]) \n        {    \n             double a = 25.64;\n             int  b = 25;\n             a = a % 10;\n             b = b % 10;\n             System.out.println(a + \" \"  + b);\n        } \n    }','a','Modulus operator returns the remainder of a division operation on the operand. a = a % 10 returns 25.64 % 10 i:e 5.640000000000001. Similarly b = b % 10 returns 5.\noutput:\n$ javac Modulus.java\n$ java Modulus\n5.640000000000001 5\n'),(98,2,9,8,'What will be the output of the following Java program?\nclass increment \n    {\n        public static void main(String args[]) \n        {        \n             int g = 3;\n             System.out.print(++g * 8);\n        } \n    }','c','Operator ++ has more preference than *, thus g becomes 4 and when multiplied by 8 gives 32.\noutput:\n$ javac increment.java\n$ java increment\n32'),(99,2,9,9,'Can 8 byte long data type be automatically type cast to 4 byte float data type?','a','Both data types have different memory representation that’s why 8-byte integral data type can be stored to 4-byte floating point data type.'),(100,2,9,10,'What will be the output of the following Java program?\nclass Output \n    {\n        public static void main(String args[]) \n        {    \n             int a = 1;\n             int b = 2;\n             int c;\n             int d;\n             c = ++b;\n             d = a++;\n             c++;\n             b++;\n             ++a;\n             System.out.println(a + \" \" + b + \" \" + c);\n        } \n    }','d','None.\noutput:\n$ javac Output.java\n$ java Output\n3 4 4'),(101,2,10,1,'Which of these is not a bitwise operator?','d','<= is a relational operator.'),(102,2,10,2,'Which operator is used to invert all the digits in a binary representation of a number?','a','Unary not operator, ~, inverts all of the bits of its operand in binary representation.'),(103,2,10,3,'On applying Left shift operator, <<, on integer bits are lost one they are shifted past which position bit?','d','The left shift operator shifts all of the bits in a value to the left specified number of times. For each shift left, the high order bit is shifted out and lost, zero is brought in from the right. When a left shift is applied to an integer operand, bits are lost once they are shifted past the bit position 31.'),(104,2,10,4,'Which right shift operator preserves the sign of the value?','b','None.'),(105,2,10,5,'Which of these statements are incorrect?','d','The right shift operator automatically fills the higher order bit with its previous contents each time a shift occurs. This also preserves the sign of the value.'),(106,2,10,6,'What will be the output of the following Java program?\nclass bitwise_operator \n    {\n        public static void main(String args[])\n        {\n            int var1 = 42;\n            int var2 = ~var1;\n            System.out.print(var1 + \" \" + var2);     	\n        } \n    }','c','Unary not operator, ~, inverts all of the bits of its operand. 42 in binary is 00101010 in using ~ operator on var1 and assigning it to var2 we get inverted value of 42 i:e 11010101 which is -43 in decimal.\noutput:\n$ javac bitwise_operator.java\n$ java bitwise_operator\n42 -43'),(107,2,10,7,'What will be the output of the following Java program?\nclass bitwise_operator \n    {\n        public static void main(String args[]) \n        {    \n             int a = 3;\n             int b = 6;\n 	     int c = a | b;\n             int d = a & b;             \n             System.out.println(c + \" \"  + d);\n        } \n    }','a','And operator produces 1 bit if both operand are 1. Or operator produces 1 bit if any bit of the two operands in 1.\noutput:\n$ javac bitwise_operator.java\n$ java bitwise_operator\n7 2'),(108,2,10,8,'What will be the output of the following Java program?\nclass leftshift_operator \n    {\n        public static void main(String args[]) \n        {        \n             byte x = 64;\n             int i;\n             byte y; \n             i = x << 2;\n             y = (byte) (x << 2)\n             System.out.print(i + \" \" + y);\n        } \n    }','d','None.\noutput:\n$ javac leftshift_operator.java\n$ java leftshift_operator\n256 0'),(109,2,10,9,'What will be the output of the following Java program?\nclass rightshift_operator \n    {\n        public static void main(String args[]) \n        {    \n             int x; \n             x = 10;\n             x = x >> 1;\n             System.out.println(x);\n        } \n    }','b','Right shift operator, >>, devides the value by 2.\noutput:\n$ javac rightshift_operator.java\n$ java rightshift_operator\n5'),(110,2,10,10,'What will be the output of the following Java program?\nclass Output \n    {\n        public static void main(String args[]) \n        {    \n             int a = 1;\n             int b = 2;\n             int c = 3;\n             a |= 4;\n             b >>= 1;\n             c <<= 1;\n             a ^= c;\n             System.out.println(a + \" \" + b + \" \" + c);\n        } \n    }','a','None.\noutput:\n$ javac Output.java\n$ java Output\n3 1 6'),(111,2,11,1,'What is the output of relational operators?','b','None.'),(112,2,11,2,'Which of these is returned by “greater than”, “less than” and “equal to” operators?','c','All relational operators return a boolean value ie. true and false.'),(113,2,11,3,'Which of the following operators can operate on a boolean variable?\n 1. &&\n   2. ==\n   3. ?:\n   4. +=','d','Operator Short circuit AND, &&, equal to, == , ternary if-then-else, ?:, are boolean logical operators. += is an arithmetic operator it can operate only on numeric values.'),(114,2,11,4,'Which of these operators can skip evaluating right hand operand?','d','Operator short circuit and, &&, and short circuit or, ||, skip evaluating right hand operand when output can be determined by left operand alone.'),(115,2,11,5,'Which of these statements is correct?','d','True and false are keywords, they are non numeric values which do not relate to zero or non zero numbers. true and false are boolean values.'),(116,2,11,6,'What will be the output of the following Java code?\nclass Relational_operator \n    {\n        public static void main(String args[])\n        {\n            int var1 = 5; \n            int var2 = 6;\n            System.out.print(var1 > var2);\n        } \n    }','d','Operator > returns a boolean value. 5 is not greater than 6 therefore false is returned.\noutput:\n$ javac Relational_operator.java\n$ java Relational_operator\nfalse'),(117,2,11,7,'What will be the output of the following Java code?\nclass bool_operator \n    {\n        public static void main(String args[]) \n        {    \n             boolean a = true;\n             boolean b = !true;\n             boolean c = a | b;\n 	     boolean d = a & b;\n             boolean e = d ? b : c;\n             System.out.println(d + \" \" + e);\n        } \n    }','d','Operator | returns true if any one operand is true, thus ‘c = true | false’ is true. Operator & returns a true if both of the operand is true thus d is false. Ternary operator ?: assigns left of ‘:’ if condition is true and right hand of ‘:’ if condition is false. d is false thus e = d ? b : c , assigns c to e , e contains true.\noutput:\n$ javac bool_operator.java\n$ java bool_operator\nfalse true'),(118,2,11,8,'What will be the output of the following Java code?\nclass ternary_operator \n    {\n        public static void main(String args[]) \n        {        \n             int x = 3;\n             int y = ~ x;\n             int z;\n             z = x > y ? x : y;\n             System.out.print(z);\n        } \n    }','c','None.\noutput:\n$ javac ternary_operator.java\n$ java ternary_operator\n3'),(119,2,11,9,'What will be the output of the following Java code?\nclass Output \n    {\n        public static void main(String args[]) \n        {    \n             int x , y = 1;\n             x = 10;\n             if (x != 10 && x / 0 == 0)\n                 System.out.println(y);\n             else\n                 System.out.println(++y);\n        } \n    }','b','Operator short circuit and, &&, skips evaluating right hand operand if left hand operand is false thus division by zero in if condition does not give an error.\noutput:\n$ javac Output.java\n$ java Output\n2'),(120,2,11,10,'What will be the output of the following Java code?\nclass Output \n    {\n        public static void main(String args[]) \n        {    \n             boolean a = true;\n             boolean b = false;\n             boolean c = a ^ b;\n             System.out.println(!c);\n        } \n    }','c','None.\noutput:\n$ javac Output.java\n$ java Output\nfalse'),(121,2,12,1,'Which of these have highest precedence?','a','Order of precedence is (highest to lowest) a -> b -> c -> d.'),(122,2,12,2,'What should be expression1 evaluate to in using ternary operator as in this line?\nexpression1 ?  expression2  :  expression3','c','The controlling condition of ternary operator must evaluate to boolean.'),(123,2,12,3,'What is the value stored in x in the following lines of Java code?\nint x, y, z;\n    x = 0;\n    y = 1;\n    x = y = z = 8;','d','None.'),(124,2,12,4,'What is the order of precedence (highest to lowest) of following operators?\n1. &    \n    2. ^\n    3. ?:','a','None.'),(125,2,12,5,'Which of these statements are incorrect?','c','Division operator, /, has equal precedence as of multiplication operator. In expression involving multiplication and division evaluation of expression will begin from the right side when no brackets are used.'),(126,2,12,6,'What will be the output of the following Java code?\nclass operators \n    {\n        public static void main(String args[])\n        {\n            int var1 = 5; \n            int var2 = 6;\n            int var3;\n            var3 = ++ var2 * var1 / var2 + var2;\n            System.out.print(var3);\n        } \n    }','c','Operator ++ has the highest precedence than / , * and +. var2 is incremented to 7 and then used in expression, var3 = 7 * 5 / 7 + 7, gives 12.\noutput:\n$ javac operators.java\n$ java operators\n12'),(127,2,12,7,'What will be the output of the following Java code?\nclass operators \n    {\n        public static void main(String args[]) \n        {    \n             int x = 8;\n             System.out.println(++x * 3 + \" \" + x);\n        } \n    }','d','Operator ++ has higher precedence than multiplication operator, *, x is incremented to 9 than multiplied with 3 giving 27.\noutput:\n$ javac operators.java\n$ java operators\n27 9'),(128,2,12,8,'What will be the output of the following Java code?\nclass Output \n{\n        public static void main(String args[]) \n        {    \n             int x=y=z=20;\n \n        } \n}','d','None.'),(129,2,12,9,'Which of these lines of Java code will give better performance?\n1. a | 4 + c >> b & 7; \n2. (a | ((( 4 * c ) >> b ) & 7 ))','c','Parentheses do not degrade the performance of the program. Adding parentheses to reduce ambiguity does not negatively affect your system.'),(130,2,12,10,'What will be the output of the following Java program?\nclass Output \n{\n        public static void main(String args[]) \n        {    \n             int a,b,c,d;\n             a=b=c=d=20;\n            a+=b-=c*=d/=20;\n           System.out.println(a+\" \"+b+\" \"+c+\" \"+d);\n \n        } \n}','c','Expression will evaluate from right to left.\noutput:\n$ javac Output.java\n$ java Output\n20 0 20 1'),(131,2,13,1,'Which of these selection statements test only for equality?','b','Switch statements checks for equality between the controlling variable and its constant cases.'),(132,2,13,2,'Which of these are selection statements in Java?','a','Continue and break are jump statements, and for is a looping statement.'),(133,2,13,3,'Which of the following loops will execute the body of loop even when condition controlling the loop is initially false?','a','None.'),(134,2,13,4,'Which of these jump statements can skip processing the remainder of the code in its body for a particular iteration?','d','None.'),(135,2,13,5,'Which of this statement is incorrect?','b','No two case constants in the same switch can have identical values.'),(136,2,13,6,'What will be the output of the following Java program?\nclass selection_statements \n    {\n        public static void main(String args[])\n        {\n            int var1 = 5; \n            int var2 = 6;\n            if ((var2 = 1) == var1)\n                System.out.print(var2);\n            else \n                System.out.print(++var2);\n        } \n    }','b','var2 is initialised to 1. The conditional statement returns false and the else part gets executed.\noutput:\n$ javac selection_statements.java\n$ java selection_statements\n2'),(137,2,13,7,'What will be the output of the following Java program?\nclass comma_operator \n    {\n        public static void main(String args[]) \n        {    \n             int sum = 0;\n             for (int i = 0, j = 0; i < 5 & j < 5; ++i, j = i + 1)\n                 sum += i;\n 	     System.out.println(sum);\n        } \n    }','b','Using comma operator, we can include more than one statement in the initialization and iteration portion of the for loop. Therefore both ++i and j = i + 1 is executed i gets the value – 0,1,2,3,4 & j gets the values -0,1,2,3,4,5.\noutput:\n$ javac comma_operator.java\n$ java comma_operator\n6'),(138,2,13,8,'What will be the output of the following Java program?\nclass jump_statments \n    {\n        public static void main(String args[]) \n        {        \n             int x = 2;\n             int y = 0;\n             for ( ; y < 10; ++y) \n             {\n                 if (y % x == 0) \n                     continue;  \n                 else if (y == 8)\n                      break;\n                 else\n                    System.out.print(y + \" \");\n             }\n        } \n    }','c','Whenever y is divisible by x remainder body of loop is skipped by continue statement, therefore if condition y == 8 is never true as when y is 8, remainder body of loop is skipped by continue statements of first if. Control comes to print statement only in cases when y is odd.\noutput:\n$ javac jump_statments.java\n$ java jump_statments\n1 3 5 7 9'),(139,2,13,9,'What will be the output of the following Java program?\nclass Output \n{\n        public static void main(String args[]) \n        {    \n           final int a=10,b=20;\n          while(a<b)\n          {\n \n          System.out.println(\"Hello\");\n          }\n          System.out.println(\"World\");\n \n        } \n}','d','Every final variable is compile time constant.'),(140,2,13,10,'What will be the output of the following Java program?\nclass Output \n    {\n        public static void main(String args[]) \n        {    \n             int a = 5;\n             int b = 10;\n             first: \n             {\n                second: \n                {\n                   third: \n                   { \n                       if (a ==  b >> 1)\n                           break second;\n                   }\n                   System.out.println(a);\n                }\n                System.out.println(b);\n             }\n        } \n    }','d','b >> 1 in if returns 5 which is equal to a i:e 5, therefore body of if is executed and block second is exited. Control goes to end of the block second executing the last print statement, printing 10.\noutput:\n$ javac Output.java\n$ java Output\n10'),(141,2,14,1,'What would be the output of the following code snippet if variable a=10?\nif(a<=0)\n{\n   if(a==0)\n   {\n     System.out.println(\"1 \");\n   }\n   else \n   { \n      System.out.println(\"2 \");\n   }\n}\nSystem.out.println(\"3 \");','d','Since the first if condition is not met, control would not go inside if statement and hence only statement after the entire if block will be executed.'),(142,2,14,2,'The while loop repeats a set of code while the condition is not met?','b','While loop repeats a set of code only until the condition is met.'),(143,2,14,3,'What is true about a break?','b','Break halts the execution and forces the control out of the loop.'),(144,2,14,4,'What is true about do statement?','a','Do statement checks the condition at the end of the loop. Hence, code gets executed at least once.'),(145,2,14,5,'Which of the following is used with the switch statement?','c','Break is used with a switch statement to shift control out of switch.'),(146,2,14,6,'What is the valid data type for variable “a” to print “Hello World”?\nswitch(a)\n{\n   System.out.println(\"Hello World\");\n}','d','The switch condition would only meet if variable “a” is of type byte or char.'),(147,2,14,7,'Which of the following is not a decision making statement?','d','do-while is an iteration statement. Others are decision making statements.'),(148,2,14,8,'Which of the following is not a valid jump statement?','b','break, continue and return transfer control to another part of the program and returns back to caller after execution. However, goto is marked as not used in Java.'),(149,2,14,9,'From where break statement causes an exit?','d','The break statement causes an exit from innermost loop or switch.'),(150,2,14,10,'Which of the following is not a valid flow control statement?','a','exit() is not a flow control statement in Java. exit() terminates the currently running JVM.'),(151,3,15,1,'Which of the following is not OOPS concept in Java?','d','There are 4 OOPS concepts in Java. Inheritance, Encapsulation, Polymorphism and Abstraction.'),(152,3,15,2,'Which of the following is a type of polymorphism in Java?','a','There are two types of polymorphism in Java. Compile time polymorphism (overloading) and runtime polymorphism (overriding).'),(153,3,15,3,'When does method overloading is determined?','b','Overloading is determined at compile time. Hence, it is also known as compile time polymorphism.'),(154,3,15,4,'When Overloading does not occur?','d','Overloading occurs when more than one method with same name but different constructor and also when same signature but different number of parameters and/or parameter type.'),(155,3,15,5,'Which concept of Java is a way of converting real world objects in terms of class?','c','Abstraction is the concept of defining real world objects in terms of classes or interfaces.'),(156,3,15,6,'Which concept of Java is achieved by combining methods and attribute into a class?','a','Encapsulation is implemented by combining methods and attribute into a class. The class acts like a container of encapsulating properties.'),(157,3,15,7,'What is it called if an object has its own lifecycle and there is no owner?','d','It is a relationship where all objects have their own lifecycle and there is no owner. This occurs where many to many relationships are available, instead of one to one or one to many.'),(158,3,15,8,'What is it called where child object gets killed if parent object is killed?','b','Composition occurs when child object gets killed if parent object gets killed. Aggregation is also known as strong Aggregation.'),(159,3,15,9,'What is it called where object has its own lifecycle and child object cannot belong to another parent object?','a','Aggregation occurs when objects have their own life cycle and child object can associate with only one parent object.'),(160,3,15,10,'Method overriding is combination of inheritance and polymorphism?','a','In order for method overriding, method with same signature in both superclass and subclass is required with same signature. That satisfies both concepts inheritance and polymorphism.'),(161,3,16,1,'Which component is used to compile, debug and execute java program?','b','JDK is a core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program.'),(162,3,16,2,'Which component is responsible for converting bytecode into machine specific code?','a','JVM is responsible to converting bytecode to the machine specific code. JVM is also platform dependent and provides core java functions like garbage collection, memory management, security etc.'),(163,3,16,3,'Which component is responsible to run java program?','d','JRE is the implementation of JVM, it provides platform to execute java programs.'),(164,3,16,4,'Which component is responsible to optimize bytecode to machine code?','c','JIT optimizes bytecode to machine specific language code by compiling similar bytecodes at the same time. This reduces overall time taken for compilation of bytecode to machine specific language.'),(165,3,16,5,'Which statement is true about java?','a','Java is called \"Platform Independent Language\" as it primarily works on the principle of \"compile once, run everywhere\".'),(166,3,16,6,'Which of the below is invalid identifier with the main method?','c','main method cannot be private as it is invoked by external method. Other identifier are valid with main method.'),(167,3,16,7,'What is the extension of java code files?','b','Java files have .java extension.'),(168,3,16,8,'What is the extension of compiled java classes?','a','The compiled java files have .class extension.'),(169,3,16,9,'How can we identify whether a compilation unit is class or interface from a .class file?','a','The Java source file contains a header that declares the type of class or interface, its visibility with respect to other classes, its name and any superclass it may extend, or interface it implements.'),(170,3,16,10,'What is use of interpreter?','b','Interpreters read high level language (interprets it) and execute the program. Interpreters are normally not passing through byte-code and jit compilation.'),(171,4,17,1,'What is the stored in the object obj in following lines of Java code?\nbox obj;','b','Memory is allocated to an object using new operator. box obj; just declares a reference to object, no memory is allocated to it hence it points to NULL.'),(172,4,17,2,'Which of these keywords is used to make a class?','a','None.'),(173,4,17,3,'Which of the following is a valid declaration of an object of class Box?','a','None.'),(174,4,17,4,'Which of these operators is used to allocate memory for an object?','c','Operator new dynamically allocates memory for an object and returns a reference to it. This reference is address in memory of the object allocated by new.'),(175,4,17,5,'Which of these statement is incorrect?','a','Every class does not need to have a main() method, there can be only one main() method which is made public.'),(176,4,17,6,'What will be the output of the following Java program?\nclass main_class \n    {\n        public static void main(String args[])\n        {\n            int x = 9;\n            if (x == 9) \n            { \n                int x = 8;\n                System.out.println(x);\n            }\n        } \n    }','c','Two variables with the same name can’t be created in a class.\noutput:\n$ javac main_class.java\nException in thread \"main\" java.lang.Error: Unresolved compilation problem: \n	 Duplicate local variable x'),(177,4,17,7,'Which of the following statements is correct?','a','None.'),(178,4,17,8,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n    } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n             box obj = new box();\n             obj.width = 10;\n             obj.height = 2;\n             obj.length = 10;\n             int y = obj.width * obj.height * obj.length; \n             System.out.print(y);\n        } \n    }','b','None.\noutput:\n$ javac mainclass.java\n$ java mainclass\n200'),(179,4,17,9,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n    } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n            box obj1 = new box();\n            box obj2 = new box();\n            obj1.height = 1;\n            obj1.length = 2;\n            obj1.width = 1;\n            obj2 = obj1;\n            System.out.println(obj2.height);\n        } \n    }','a','When we assign an object to another object of same type, all the elements of right side object gets copied to object on left side of equal to, =, operator.\noutput:\n$ javac mainclass.java\n$ java mainclass\n1'),(180,4,17,10,'What will be the output of the following Java program?\nclass box \n   {\n        int width;\n        int height;\n        int length;\n   } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n            box obj = new box();\n            System.out.println(obj);\n        } \n    }','d','When we print object internally toString() will be called to return string into this format classname@hashcode in hexadecimal form.\noutput:\n$ javac mainclass.java\n$ java mainclass\nbox@130671e'),(181,4,18,1,'What is the return type of a method that does not return any value?','c','Return type of a method must be made void if it is not returning any value.'),(182,4,18,2,'What is the process of defining more than one method in a class differentiated by method signature?','b','Function overloading is a process of defining more than one method in a class with same name differentiated by function signature i:e return type or parameters type and number. Example – int volume(int length, int width) & int volume(int length , int width , int height) can be used to calculate volume.'),(183,4,18,3,'Which of the following is a method having same name as that of it’s class?','d','A constructor is a method that initializes an object immediately upon creation. It has the same name as that of class in which it resides.'),(184,4,18,4,'Which method can be defined only once in a program?','a','main() method can be defined only once in a program. Program execution begins from the main() method by java runtime system.'),(185,4,18,5,'Which of this statement is incorrect?','d','All object of class share a single copy of methods defined in a class, Methods are allotted memory only once. All the objects of the class have access to methods of that class are allotted memory only for the variables not for the methods.'),(186,4,18,6,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        void volume(int height, int length, int width) \n        {\n             volume = width*height*length;\n        } \n    }    \n    class Prameterized_method\n    {\n        public static void main(String args[])\n        {\n            box obj = new box();\n            obj.height = 1;\n            obj.length = 5;\n            obj.width = 5;\n            obj.volume(3,2,1);\n            System.out.println(obj.volume);        \n        } \n     }','c','None.\noutput:\n$ Prameterized_method.java\n$ Prameterized_method\n6'),(187,4,18,7,'What will be the output of the following Java program?\nclass equality \n    {\n        int x;\n        int y;\n        boolean isequal()\n        {\n            return(x == y);  \n        } \n    }    \n    class Output \n    {\n        public static void main(String args[])\n        {\n            equality obj = new equality();\n            obj.x = 5;\n            obj.y = 5;\n            System.out.println(obj.isequal());\n        } \n    }','b','None.\noutput:\n$ javac Output.java\n$ java Output \ntrue'),(188,4,18,8,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        void volume() \n        {\n             volume = width*height*length;\n        } \n    }    \n    class Output \n    { \n        public static void main(String args[])\n        {\n            box obj = new box();\n            obj.height = 1;\n            obj.length = 5;\n            obj.width = 5;\n            obj.volume();\n            System.out.println(obj.volume);        \n        } \n    }','c','None.\noutput:\n$ javac Output.java\n$ java Output\n25'),(189,4,18,9,'In the following Java code, which call to sum() method is appropriate?\nclass Output \n{\n \n        public static int sum(int ...x)\n        {\n             return; \n        }\n        static void main(String args[]) \n        {    \n             sum(10);\n             sum(10,20);\n             sum(10,20,30);\n             sum(10,20,30,40);\n        } \n}','d','sum is a variable argument method and hence it can take any number as an argument.'),(190,4,18,10,'What will be the output of the following Java program?\nclass area \n    {\n        int width;\n        int length;\n        int volume;\n        area() \n        {\n           width=5;\n           length=6;\n        }\n        void volume() \n        {\n             volume = width*length*height;\n        } \n    }    \n    class cons_method \n    {\n        public static void main(String args[])\n        {\n            area obj = new area();\n            obj.volume();\n            System.out.println(obj.volume);        \n        } \n    }','d','Variable height is not defined.\noutput:\n$ javac cons_method.java\n$ java cons_method\nerror: cannot find symbol height'),(191,4,19,1,'What is the return type of Constructors?','d','Constructors does not have any return type, not even void.'),(192,4,19,2,'Which keyword is used by the method to refer to the object that invoked it?','d','this keyword can be used inside any method to refer to the current object. this is always a reference to the object on which the method was invoked.'),(193,4,19,3,'Which of the following is a method having same name as that of its class?','d','A constructor is a method that initializes an object immediately upon creation. It has the same name as that of class in which it resides.'),(194,4,19,4,'Which operator is used by Java run time implementations to free the memory of an object when it is no longer needed?','d','Java handles deallocation of memory automatically, we do not need to explicitly delete an element. Garbage collection only occurs during execution of the program. When no references to the object exist, that object is assumed to be no longer needed, and the memory occupied by the object can be reclaimed.'),(195,4,19,5,'Which function is used to perform some action when the object is to be destroyed?','a','None.'),(196,4,19,6,'What will be the output of the following Java code?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        box() \n        {\n            width = 5;\n            height = 5;\n            length = 6;\n        }\n        void volume() \n        {\n             volume = width*height*length;\n        } \n    }    \n    class constructor_output \n    {\n        public static void main(String args[])\n        {\n            box obj = new box();\n            obj.volume();\n            System.out.println(obj.volume);\n        }\n   }','b','None.\noutput:\n$ constructor_output.java\n$ constructor_output\n150'),(197,4,19,7,'What will be the output of the following Java code?\nclass San\n{\n     San()throws IOException\n     {\n \n     } \n \n}\nclass Foundry extends San\n{\n     Foundry()\n     {\n \n     }\n     public static void main(String[]args)\n     {\n \n     }\n}','a','If parent class constructor throws any checked exception, compulsory child class constructor should throw the same checked exception as its parent, otherwise code won’t compile.'),(198,4,19,8,'What will be the output of the following Java code?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        void finalize() \n        {\n            volume = width*height*length;\n            System.out.println(volume);\n        }\n        protected void volume() \n       {\n            volume = width*height*length;\n            System.out.println(volume);\n       } \n    }    \n    class Output \n    { \n        public static void main(String args[])\n        {\n            box obj = new box();\n            obj.width=5;\n            obj.height=5;\n            obj.length=6;\n            obj.volume();\n        } \n    }','a','None.\noutput:\n$ javac Output.java\n$ java Output\n150'),(199,4,19,9,'Which of the following statements are incorrect?','c','finalize() method is called just prior to garbage collection. it is not called when object goes out of scope.'),(200,4,19,10,'What will be the output of the following Java code?\nclass area \n    {\n        int width;\n        int length;\n        int area;\n        void area(int width, int length) \n        {\n            this.width = width;\n            this.length = length;\n        }\n \n    }    \n    class Output \n    {\n        public static void main(String args[])\n        {\n            area obj = new area();\n            obj.area(5 , 6);\n            System.out.println(obj.length + \" \" + obj.width);        \n        } \n    }','c','this keyword can be used inside any method to refer to the current object. this is always a reference to the object on which the method was invoked.\noutput:\n$ javac Output.java\n$ java Output\n6 5'),(201,4,20,1,'What is true about private constructor?','a','Object of private constructor can only be created within class. Private constructor is used in singleton pattern.'),(202,4,20,2,'What would be the behaviour if this() and super() used in a method?','c','this() and super() cannot be used in a method. This throws compile time error.'),(203,4,20,3,'What is false about constructor?','c','The constructor cannot have a return type. It should create and return new objects. Hence it would give a compilation error.'),(204,4,20,4,'What is true about Class.getInstance()?','d','Class class provides list of methods for use like getInstance().'),(205,4,20,5,'What is true about constructor?','b','Constructor returns a new object with variables defined as in the class. Instance variables are newly created and only one copy of static variables are created.'),(206,4,20,6,'Abstract class cannot have a constructor.','b','No instance can be created of abstract class. Only pointer can hold instance of object.'),(207,4,20,7,'What is true about protected constructor?','b','Protected access modifier means that constructor can be accessed by child classes of the parent class and classes in the same package.'),(208,4,20,8,'What is not the use of “this” keyword in Java?','d','“this” is an important keyword in java. It helps to distinguish between local variable and variables passed in the method as parameters.'),(209,4,20,9,'What would be the behaviour if one parameterized constructor is explicitly defined?','d','The class compiles successfully. But the object creation of that class gives a compilation error.'),(210,4,20,10,'What would be behaviour if the constructor has a return type?','a','The constructor cannot have a return type. It should create and return new object. Hence it would give compilation error.'),(211,4,21,1,'Which of the following has the highest memory requirement?','c','JVM is the super set which contains heap, stack, objects, pointers, etc.'),(212,4,21,2,'Where is a new object allocated memory?','a','A new object is always created in young space. Once young space is full, a special young collection is run where objects which have lived long enough are moved to old space and memory is freed up in young space for new objects.'),(213,4,21,3,'Which of the following is a garbage collection technique?','b','A mark and sweep garbage collection consists of two phases, the mark phase and the sweep phase. I mark phase all the objects reachable by java threads, native handles and other root sources are marked alive and others are garbage. In sweep phase, the heap is traversed to find gaps between live objects and the gaps are marked free list used for allocating memory to new objects.'),(214,4,21,4,'What is -Xms and -Xmx while starting jvm?','a','JVM will be started with Xms amount of memory and will be able to use a maximum of Xmx amount of memory. java -Xmx2048m -Xms256m.'),(215,4,21,5,'Which exception is thrown when java is out of memory?','c','The Xms flag has no default value, and Xmx typically has a default value of 256MB. A common use for these flags is when you encounter a java.lang.OutOfMemoryError.'),(216,4,21,6,'How to get prints of shared object memory maps or heap memory maps for a given process?','a','We can use jmap as jmap -J-d64 -heap pid.'),(217,4,21,7,'What happens to the thread when garbage collection kicks off?','c','The thread is paused when garbage collection runs which slows the application performance.'),(218,4,21,8,'Which of the below is not a Java Profiler?','a','Memory leak is like holding a strong reference to an object although it would never be needed anymore. Objects that are reachable but not live are considered memory leaks. Various tools help us to identify memory leaks.'),(219,4,21,9,'Which of the below is not a memory leak solution?','c','Process restart is not a permanent fix to memory leak problem. The problem will resurge again.'),(220,4,21,10,'Garbage Collection can be controlled by a program?','b','Garbage Collection cannot be controlled by a program.'),(221,4,22,1,'What is the process of defining two or more methods within same class that have same name but different parameters declaration?','a','Two or more methods can have same name as long as their parameters declaration is different, the methods are said to be overloaded and process is called method overloading. Method overloading is a way by which Java implements polymorphism.'),(222,4,22,2,'Which of these can be overloaded?','c','None.'),(223,4,22,3,'Which of these is correct about passing an argument by call-by-value process?','a','When we pass an argument by call-by-value a copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have no effect on original argument, they remain the same.'),(224,4,22,4,'What is the process of defining a method in terms of itself, that is a method that calls itself?','d','None.'),(225,4,22,5,'What will be the output of the following Java code?\nclass San\n{\n public void m1 (int i,float f)\n {\n  System.out.println(\" int float method\");\n }\n \n public void m1(float f,int i);\n  {\n  System.out.println(\"float int method\");\n  }\n \n  public static void main(String[]args)\n  {\n    San s=new San();\n        s.m1(20,20);\n  }\n}','c','While resolving overloaded method, compiler automatically promotes if exact match is not found. But in this case, which one to promote is an ambiguity.'),(226,4,22,6,'What will be the output of the following Java code?\nclass overload \n    {\n        int x;\n 	int y;\n        void add(int a) \n        {\n            x =  a + 1;\n        }\n        void add(int a, int b)\n        {\n            x =  a + 2;\n        }        \n    }    \n    class Overload_methods \n    {\n        public static void main(String args[])\n        {\n            overload obj = new overload();   \n            int a = 0;\n            obj.add(6);\n            System.out.println(obj.x);     \n        }\n   }','c','None.\noutput:\n$ javac Overload_methods.java\n$ java Overload_methods\n7'),(227,4,22,7,'What will be the output of the following Java code?\nclass overload \n    {\n        int x;\n 	int y;\n        void add(int a)\n        {\n            x =  a + 1;\n        }\n        void add(int a , int b)\n        {\n            x =  a + 2;\n        }        \n    }    \n    class Overload_methods \n    {\n        public static void main(String args[])\n        {\n            overload obj = new overload();   \n            int a = 0;\n            obj.add(6, 7);\n            System.out.println(obj.x);     \n        }\n    }','c','None.\noutput:\n$ javac Overload_methods.java\n$ java Overload_methods\n8'),(228,4,22,8,'What will be the output of the following Java code?\nclass overload \n   {\n        int x;\n 	double y;\n        void add(int a , int b) \n        {\n            x = a + b;\n        }\n        void add(double c , double d)\n        {\n            y = c + d;\n        }\n        overload() \n        {\n            this.x = 0;\n            this.y = 0;\n        }        \n    }    \n    class Overload_methods \n    {\n        public static void main(String args[])\n        {\n            overload obj = new overload();   \n            int a = 2;\n            double b = 3.2;\n            obj.add(a, a);\n            obj.add(b, b);\n            System.out.println(obj.x + \" \" + obj.y);     \n        }\n   }','d','For obj.add(a,a); ,the function in line number 4 gets executed and value of x is 4. For the next function call, the function in line number 7 gets executed and value of y is 6.4\noutput:\n$ javac Overload_methods.java\n$ java Overload_methods \n4 6.4'),(229,4,22,9,'What will be the output of the following Java code?\nclass test \n    {\n        int a;\n        int b;\n        void meth(int i , int j) \n        {\n            i *= 2;\n            j /= 2;\n        }          \n    }    \n    class Output \n    {\n        public static void main(String args[])\n        {\n            test obj = new test();\n	    int a = 10;\n            int b = 20;             \n            obj.meth(a , b);\n            System.out.println(a + \" \" + b);        \n        } \n    }','a','Variables a & b are passed by value, copy of their values are made on formal parameters of function meth() that is i & j. Therefore changes done on i & j are not reflected back on original arguments. a & b remain 10 & 20 respectively.\noutput:\n$ javac Output.java\n$ java Output\n10 20'),(230,4,22,10,'What will be the output of the following Java code?\nclass test \n    {\n        int a;\n        int b;\n        test(int i, int j) \n        {\n            a = i;\n            b = j;\n        }\n        void meth(test o) \n        {\n            o.a *= 2;\n            O.b /= 2;\n        }          \n    }    \n    class Output \n    {\n        public static void main(String args[])\n        {\n            test obj = new test(10 , 20);\n            obj.meth(obj);\n            System.out.println(obj.a + \" \" + obj.b);        \n        } \n    }','b','Class objects are always passed by reference, therefore changes done are reflected back on original arguments. obj.meth(obj) sends object obj as parameter whose variables a & b are multiplied and divided by 2 respectively by meth() function of class test. a & b becomes 20 & 10 respectively.\noutput:\n$ javac Output.java\n$ java Output\n20 10'),(231,4,23,1,'Which of these access specifiers must be used for main() method?','b','main() method must be specified public as it called by Java run time system, outside of the program. If no access specifier is used then by default member is public within its own package & cannot be accessed by Java run time system.'),(232,4,23,2,'Which of these is used to access a member of class before object of that class is created?','c','None.'),(233,4,23,3,'Which of these is used as a default for a member of a class if no access specifier is used for it?','a','When we pass an argument by call-by-value a copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have no effect on original argument, they remain the same.'),(234,4,23,4,'What is the process by which we can control what parts of a program can access the members of a class?','c','None.'),(235,4,23,5,'Which of the following statements are incorrect?','c','private members of a class can not be inherited by a subclass.'),(236,4,23,6,'What will be the output of the following Java code?\nclass access\n    {\n        public int x;\n 	private int y;\n        void cal(int a, int b)\n        {\n            x =  a + 1;\n            y =  b;\n        }        \n    }    \n    public class access_specifier \n    {\n        public static void main(String args[])\n        {\n            access obj = new access();   \n            obj.cal(2, 3);\n            System.out.println(obj.x + \" \" + obj.y);     \n        }\n   }','c','None.\noutput:\n$ javac access_specifier.java\nException in thread \"main\" java.lang.Error: Unresolved compilation problem: \n	The field access.y is not visible'),(237,4,23,7,'What will be the output of the following Java code?\nclass access\n    {\n        public int x;\n 	private int y;\n        void cal(int a, int b)\n        {\n            x =  a + 1;\n            y =  b;\n        }   \n        void print() \n        {\n            System.out.println(\" \" + y);     \n        } \n    }   \n    public class access_specifier \n    {\n        public static void main(String args[])\n        {\n            access obj = new access();   \n            obj.cal(2, 3);\n            System.out.println(obj.x);\n            obj.print();     \n        }\n   }','b','None.\noutput:\n$ javac access_specifier.java\n$ java access_specifier \n3 3'),(238,4,23,8,'What will be the output of the following Java code?\nclass static_out \n    {\n        static int x;\n 	static int y;\n        void add(int a, int b)\n        {\n            x = a + b;\n            y = x + b;\n        }\n    }    \n    public class static_use \n    {\n        public static void main(String args[])\n        {\n            static_out obj1 = new static_out();\n            static_out obj2 = new static_out();   \n            int a = 2;\n            obj1.add(a, a + 1);\n            obj2.add(5, a);\n            System.out.println(obj1.x + \" \" + obj2.y);     \n        }\n   }','c','None.\noutput:\n$ javac static_use.java\n$ java static_use\n7 9'),(239,4,23,9,'Which of these access specifier must be used for class so that it can be inherited by another subclass?','a','None.'),(240,4,24,1,'Which one of the following is not an access modifier?','d','Public, private, protected and default are the access modifiers.'),(241,4,24,2,'All the variables of class should be ideally declared as?','a','The variables should be private and should be accessed with get and set methods.'),(242,4,24,3,'Which of the following modifier means a particular variable cannot be accessed within the package?','a','Private variables are accessible only within the class.'),(243,4,24,4,'How can a protected modifier be accessed?','c','The protected access modifier is accessible within package and outside the package but only through inheritance. The protected access modifier can be used with data member, method and constructor. It cannot be applied in the class.'),(244,4,24,5,'What happens if constructor of class A is made private?','b','If we make any class constructor private, we cannot create the instance of that class from outside the class.'),(245,4,24,6,'All the variables of interface should be?','c','Variables of an interface are public, static and final by default because the interfaces cannot be instantiated, final ensures the value assigned cannot be changed with the implementing class and public for it to be accessible by all the implementing classes.'),(246,4,24,7,'What is true of final class?','d','Final class cannot be inherited. This helps when we do not want classes to provide extension to these classes.'),(247,4,24,8,'How many copies of static and class variables are created when 10 objects are created of a class?','a','Only one copy of static variables are created when a class is loaded. Each object instantiated has its own copy of instance variables.'),(248,4,24,9,'Can a class be declared with a protected modifier.','b','Protected class member (method or variable) is like package-private (default visibility), except that it also can be accessed from subclasses. Since there is no such concept as ‘subpackage’ or ‘package-inheritance’ in Java, declaring class protected or package-private would be the same thing.'),(249,4,24,10,'Which is the modifier when there is none mentioned explicitly?','d','Default is the access modifier when none is defined explicitly. It means the member (method or variable) can be accessed within the same package.'),(250,4,25,1,'Arrays in Java are implemented as?','b','None.'),(251,4,25,2,'Which of these keywords is used to prevent content of a variable from being modified?','a','A variable can be declared final, doing so prevents its content from being modified. Final variables must be initialized when it is declared.'),(252,4,25,3,'Which of these cannot be declared static?','b','static statements are run as soon as class containing then is loaded, prior to any object declaration.'),(253,4,25,4,'Which of the following statements are incorrect?','d','All objects of class share same static variable, when object of a class are declared, all the objects share same copy of static members, no copy of static variables are made.'),(254,4,25,5,'Which of the following statements are incorrect?','a','None.'),(255,4,25,6,'Which of these methods must be made static?','a','main() method must be declared static, main() method is called by Java runtime system before any object of any class exists.'),(256,4,25,7,'What will be the output of the following Java program?\nclass access\n    {\n        public int x;\n 	static int y;\n        void cal(int a, int b)\n        {\n            x +=  a ;\n            y +=  b;\n        }        \n    }    \n    class static_specifier \n    {\n        public static void main(String args[])\n        {\n            access obj1 = new access();\n            access obj2 = new access();   \n            obj1.x = 0;\n            obj1.y = 0;\n            obj1.cal(1, 2);\n            obj2.x = 0;\n            obj2.cal(2, 3);\n            System.out.println(obj1.x + \" \" + obj2.y);     \n        }\n   }','d','None.\noutput:\n$ javac static_specifier.java\n$ java static_specifier\n1 5'),(257,4,25,8,'What will be the output of the following Java program?\nclass access\n    {\n       static int x;\n       void increment()\n       {\n           x++;\n       }   \n     }   \n    class static_use \n    {\n        public static void main(String args[])\n        {\n            access obj1 = new access();\n            access obj2 = new access();\n            obj1.x = 0;   \n            obj1.increment();\n            obj2.increment();\n            System.out.println(obj1.x + \" \" + obj2.x);\n         }\n   }','c','All objects of class share same static variable, all the objects share same copy of static members, obj1.x and obj2.x refer to same element of class which has been incremented twice and its value is 2.\noutput:\n$ javac static_use.java\n$ java static_use \n2 2'),(258,4,25,9,'What will be the output of the following Java program?\nclass static_out \n    {\n        static int x;\n 	static int y;\n        void add(int a , int b)\n        {\n            x = a + b;\n            y = x + b;\n        }\n    }    \n    class static_use \n    {\n        public static void main(String args[])\n        {\n            static_out obj1 = new static_out();\n            static_out obj2 = new static_out();   \n            int a = 2;\n            obj1.add(a, a + 1);\n            obj2.add(5, a);\n            System.out.println(obj1.x + \" \" + obj2.y);     \n        }\n   }','c','None.\noutput:\n$ javac static_use.java\n$ java static_use\n7 9'),(259,4,25,10,'What will be the output of the following Java program?\nclass Output \n    {\n        public static void main(String args[])\n        {\n            int arr[] = {1, 2, 3, 4, 5};\n            for ( int i = 0; i < arr.length - 2; ++i)\n                System.out.println(arr[i] + \" \");\n        } \n    }','b','arr.length() is 5, so the loop is executed for three times.\noutput:\n$ javac Output.java\n$ java Output\n1 2 3'),(260,4,25,11,'What will be the output of the following Java program?\nclass Output \n    {\n        public static void main(String args[])\n        {\n            int a1[] = new int[10];\n            int a2[] = {1, 2, 3, 4, 5};\n            System.out.println(a1.length + \" \" + a2.length);\n        } \n    }','a','Arrays in java are implemented as objects, they contain an attribute that is length which contains the number of elements that can be stored in the array. Hence a1.length gives 10 and a2.length gives 5.\noutput:\n$ javac Output.java\n$ java Output\n10 5'),(261,4,26,1,'String in Java is a?','a','None.'),(262,4,26,2,'Which of these method of String class is used to obtain character at specified index?','d','None.'),(263,4,26,3,'Which of these keywords is used to refer to member of base class from a subclass?','b','Whenever a subclass needs to refer to its immediate superclass, it can do so by use of the keyword super.'),(264,4,26,4,'Which of these method of String class can be used to test to strings for equality?','d','None.'),(265,4,26,5,'Which of the following statements are incorrect?','b','Strings in Java are immutable that is they can not be modified.'),(266,4,26,6,'What will be the output of the following Java program?\nclass string_demo \n    {\n        public static void main(String args[])\n        {\n            String obj = \"I\" + \"like\" + \"Java\";   \n            System.out.println(obj);     \n        }\n   }','d','Java defines an operator +, it is used to concatenate strings.\noutput:\n$ javac string_demo.java\n$ java string_demo\nIlikeJava'),(267,4,26,7,'What will be the output of the following Java program?\nclass string_class \n    {\n        public static void main(String args[])\n        {\n            String obj = \"I LIKE JAVA\";   \n            System.out.println(obj.charAt(3));\n        } \n    }','a','charAt() is a method of class String which gives the character specified by the index. obj.charAt(3) gives 4th character i:e I.\noutput:\n$ javac string_class.java\n$ java string_class\nI'),(268,4,26,8,'What will be the output of the following Java program?\nclass string_class \n    {\n        public static void main(String args[])\n        {\n            String obj = \"I LIKE JAVA\";   \n            System.out.println(obj.length());\n        }\n    }','c','None.\noutput:\n$ javac string_class.java\n$ java string_class \n11'),(269,4,26,9,'What will be the output of the following Java program?\nclass string_class \n    {\n        public static void main(String args[])\n        {\n            String obj = \"hello\";\n            String obj1 = \"world\";   \n            String obj2 = obj;\n            obj2 = \" world\";\n            System.out.println(obj + \" \" + obj2);\n        }\n    }','c','None.\noutput:\n$ javac string_class.java\n$ java string_class\nhello world'),(270,4,26,10,'What will be the output of the following Java program?\nclass string_class \n    {\n        public static void main(String args[])\n        {\n            String obj = \"hello\";\n            String obj1 = \"world\";   \n            String obj2 = \"hello\";\n            System.out.println(obj.equals(obj1) + \" \" + obj.equals(obj2));\n        }\n    }','d','equals() is method of class String, it is used to check equality of two String objects, if they are equal, true is retuned else false.\noutput:\n$ javac string_class.java\n$ java string_class\nfalse true'),(271,4,27,1,'Which of these is the method which is executed first before execution of any other thing takes place in a program?','c','If a static method is present in the program then it will be executed first, then main will be executed.'),(272,4,27,2,'What is the process of defining more than one method in a class differentiated by parameters?','b','Function overloading is a process of defining more than one method in a class with same name differentiated by function signature i:e return type or parameters type and number. Example – int volume(int length, int width) & int volume(int length , int width , int height) can be used to calculate volume.'),(273,4,27,3,'Which of these can be used to differentiate two or more methods having the same name?','d','None.'),(274,4,27,4,'Which of these data type can be used for a method having a return statement in it?','d','None.'),(275,4,27,5,'Which of these statement is incorrect?','d','Even if a method is returning a value, it is not necessary to store that value.'),(276,4,27,6,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        void volume(int height, int length, int width) \n        {\n             volume = width * height * length;\n        } \n    }    \n    class Prameterized_method{\n        public static void main(String args[]) \n        {\n            box obj = new box();\n            obj.height = 1;\n            obj.length = 5;\n            obj.width = 5;\n            obj.volume(3, 2, 1);\n            System.out.println(obj.volume);        \n        } \n    }','c','None\noutput:\n$ Prameterized_method.java\n$ Prameterized_method\n6'),(277,4,27,7,'What will be the output of the following Java program?\nclass equality \n    {\n        int x;\n        int y;\n        boolean isequal()\n        {\n            return(x == y);  \n        } \n    }    \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            equality obj = new equality();\n            obj.x = 5;\n            obj.y = 5;\n            System.out.println(obj.isequal);\n        } \n    }','b','None\noutput:\n$ javac Output.java\n$ java Output \ntrue'),(278,4,27,8,'What will be the output of the following Java program?\nclass box \n    {\n        int width;\n        int height;\n        int length;\n        int volume;\n        void volume() \n        {\n            volume = width * height * length;\n        } \n        void volume(int x) \n        {\n            volume = x;\n        }\n    }    \n    class Output \n    { \n        public static void main(String args[]) \n        {\n            box obj = new box();\n            obj.height = 1;\n            obj.length = 5;\n            obj.width = 5;\n            obj.volume(5);\n            System.out.println(obj.volume);        \n        } \n    }','b','None.\noutput:\n$ javac Output.java\n$ java Output\n5'),(279,4,27,9,'What will be the output of the following Java program?\nclass Output \n    {\n        static void main(String args[]) \n        {    \n             int x , y = 1;\n             x = 10;\n             if(x != 10 && x / 0 == 0)\n                 System.out.println(y);\n             else\n                 System.out.println(++y);\n        } \n    }','d','main() method must be made public. Without main() being public java run time system will not be able to access main() and will not be able to execute the code.\noutput:\n$ javac Output.java\nError: Main method not found in class Output, please define the main method as:\n   public static void main(String[] args)'),(280,4,27,10,'What will be the output of the following Java program?\nclass area \n    {\n        int width;\n        int length;\n        int height;\n        area() \n        {\n        width = 5;\n        length = 6;\n        height = 1;\n        }\n        void volume() \n        {\n             volume = width * height * length;\n        } \n    }    \n    class cons_method \n    {\n        public static void main(String args[]) \n        {\n            area obj = new area();\n            obj.volume();\n            System.out.println(obj.volume);\n        } \n    }','d','None.\noutput:\n$ javac cons_method.java\n$ java cons_method\n30'),(281,4,28,1,'Which of this method is given parameter via command line arguments?','a','Only main() method can be given parameters via using command line arguments.'),(282,4,28,2,'Which of these data types is used to store command line arguments?','c','None.'),(283,4,28,3,'How many arguments can be passed to main()?','a','None.'),(284,4,28,4,'Which of these is a correct statement about args in the following line of code?\npublic static void main(String args[])','c','args in an array of String.'),(285,4,28,5,'Can command line arguments be converted into int automatically if required?','b','All command Line arguments are passed as a string. We must convert numerical value to their internal forms manually.'),(286,4,28,6,'What will be the output of the following Java program, Command line execution is done as – “java Output This is a command Line”?\nclass Output \n    {\n        public static void main(String args[]) \n        {\n            System.out.print(args[0]);\n        }\n    }','c','None.\nOutput:\n$ javac Output.javac\njava Output This is a command Line\nThis'),(287,4,28,7,'What will be the output of the following Java program, Command line exceution is done as – “java Output This is a command Line”?\nclass Output \n    {\n        public static void main(String args[]) \n        {\n            System.out.print(args[3]);\n        }\n    }','d','None.\nOutput:\n$ javac Output.javac\njava Output This is a command Line\ncommand'),(288,4,28,8,'What will be the output of the following Java program, Command line exceution is done as – “java Output This is a command Line”?\nclass Output \n    {\n        public static void main(String args[]) \n        {\n            for (String arg : args)\n            {\n                System.out.print(arg);\n            }\n        }\n    }','c','None.\nOutput:\n$ javac Output.javac\njava Output This is a command Line\nThis is a command Line'),(289,4,28,9,'What will be the output of the following Java program, Command line execution is done as – “java Output command Line 10 A b 4 N”?\nclass Output \n    {\n        public static void main(String args[]) \n        {\n            System.out.print((int)args[2] * 2);\n        }\n    }','d','None.\nOutput:\n$ javac Output.javac\nerror: incompatible types: String cannot be converted to int'),(290,4,28,10,'What will be the output of the following Java program, Command line execution is done as – “java Output command Line 10 A b 4 N”?\nclass Output \n    {\n        public static void main(String args[]) \n        {\n            System.out.print(args[6]);\n        }\n    }','d','None.\nOutput:\n$ javac Output.javac\njava Output command Line 10 A b 4 N\nN'),(291,4,29,1,'What will be the output of the following Java snippet, if attempted to compile and run this code with command line argument “java abc Rakesh Sharma”?\npublic class abc\n{\n	int a=2000;\n        public static void main(String argv[])\n        {\n	    System.out.println(argv[1]+\" :-Please pay Rs.\"+a);\n        }\n}','a','Main method is static and cannot access non static variable a.'),(292,4,29,2,'What will be the output of the following Java snippet, if attempted to compile and execute?\nclass abc\n{\n    public static void main(String args[])\n    {\n        if(args.length>0)\n        System.out.println(args.length);\n    }\n}','d','As no argument is passed to the code, the length of args is 0. So the code will not print.'),(293,4,29,3,'What will be the output of the following Java snippet, if compiled and executed with command line argument “java abc 1 2 3”?\npublic class abc\n{\n   static public void main(String [] xyz)\n   {\n       for(int n=1;n<xyz.length; n++)\n       {\n          System.out.println(xyz[n]+\"\");\n       }\n   }\n}','b','The index of array starts with 0. Since the loop is starting with 1 it will print 2 3.'),(294,4,29,4,'What will be the output of the following Java code snippet running with “java demo I write java code”?\npublic class demo\n{\n   public static void main(String args[])\n   {\n        System.out.println(args[0]+\"\"+args[args.length-1]);\n   }\n}','d','The index of array starts with 0 till length – 1. Hence it would print “I code”.'),(295,4,29,5,'What will be the output of the following Java snippet, if compiled and executed with command line “hello there”?\npublic class abc\n{\n    String[] xyz;\n \n    public static void main(String argv[])\n    {\n        xyz=argv;\n    }\n \n    public void runMethod()\n    {\n        System.out.println(argv[1]);\n    }\n}','a','Error would be “Cannot make static reference to a non static variable”. Even if main method was not static, the array argv is local to the main method and would not be visible within runMethod.'),(296,4,29,6,'How do we pass command line argument in Eclipse?','a','Arguments tab is used to pass command line argument in eclipse.'),(297,4,29,7,'Which class allows parsing of command line arguments?','b','JCommander is a very small Java framework that makes it trivial to parse command line parameters.'),(298,4,29,8,'Which annotation is used to represent command line input and assigned to correct data type?','d','@Parameter, @Parameter(names = { “-log”, “-verbose” }, description = “Level of verbosity”), etc are various forms of using @Parameter'),(299,4,29,9,'What will be the output of the following Java code snippet run as $ java Demo –length 512 –breadth 2 -h 3?\nclass Demo {\n    @Parameter(names={\"--length\"})\n    int length;\n \n    @Parameter(names={\"--breadth\"})\n    int breadth;\n \n    @Parameter(names={\"--height\",\"-h\"})\n    int height;\n \n    public static void main(String args[]) \n    {\n        Demo demo = new Demo();\n        new JCommander(demo, args);\n        demo.run();\n    }\n \n    public void run() \n    {\n        System.out.println(length+\" \"+ breadth+\" \"+height);\n    }\n}','c','JCommander helps easily pass command line arguments. @Parameter assigns input to desired parameter.'),(300,4,29,10,'What is the use of @syntax?','b','JCommander supports the @syntax, which allows us to put all our options into a file and pass this file as a parameter.\n/tmp/parameters\n-verbose\nfile1\nfile2\n$ java Main @/tmp/parameters'),(301,4,30,1,'What is Recursion in Java?','c','Recursion is the process of defining something in terms of itself. It allows us to define a method that calls itself.'),(302,4,30,2,'Which of these data types is used by operating system to manage the Recursion in Java?','b','Recursions are always managed by using stack.'),(303,4,30,3,'Which of these will happen if recursive method does not have a base case?','a','If a recursive method does not have a base case then an infinite loop occurs which results in Stack Overflow.'),(304,4,30,4,'Which of these is not a correct statement?','d','Recursion is always managed by operating system.'),(305,4,30,5,'Which of these packages contains the exception Stack Overflow in Java?','a','None.'),(306,4,30,6,'What will be the output of the following Java program?\nclass recursion \n    {\n        int func (int n) \n        {\n            int result;\n            result = func (n - 1);\n            return result;\n        }\n    } \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            recursion obj = new recursion() ;\n            System.out.print(obj.func(12));\n        }\n    }','d','Since the base case of the recursive function func() is not defined hence infinite loop occurs and results in Stack Overflow.\nOutput:\n$ javac Output.javac\n$ java Output\nException in thread \"main\" java.lang.StackOverflowError'),(307,4,30,7,'What will be the output of the following Java program?\nclass recursion \n    {\n        int func (int n) \n        {\n            int result;\n            if (n == 1)\n                return 1;\n            result = func (n - 1);\n            return result;\n        }\n    } \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            recursion obj = new recursion() ;\n            System.out.print(obj.func(5));\n        }\n    }','b','None.\nOutput:\n$ javac Output.javac\n$ java Output\n1'),(308,4,30,8,'What will be the output of the following Java program?\nclass recursion \n    {\n        int fact(int n) \n        {\n            int result;\n            if (n == 1)\n                return 1;\n            result = fact(n - 1) * n;\n            return result;\n        }\n    } \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            recursion obj = new recursion() ;\n            System.out.print(obj.fact(5));\n        }\n    }','c','fact() method recursively calculates factorial of a number, when value of n reaches 1, base case is excuted and 1 is returned.\nOutput:\n$ javac Output.javac\n$ java Output\n120'),(309,4,30,9,'What will be the output of the following Java program?\nclass recursion \n    {\n        int fact(int n) \n        {\n            int result;\n            if (n == 1)\n                return 1;\n            result = fact(n - 1) * n;\n            return result;\n        }\n    } \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            recursion obj = new recursion() ;\n            System.out.print(obj.fact(1));\n        }\n    }','a','fact() method recursively calculates factorial of a number, when value of n reaches 1, base case is excuted and 1 is returned.\nOutput:\n$ javac Output.javac\n$ java Output\n1'),(310,4,30,10,'What will be the output of the following Java program?\nclass recursion \n    {\n        int fact(int n) \n        {\n            int result;\n            if (n == 1)\n                return 1;\n            result = fact(n - 1) * n;\n            return result;\n        }\n    } \n    class Output \n    {\n        public static void main(String args[]) \n        {\n            recursion obj = new recursion() ;\n            System.out.print(obj.fact(6));\n        }\n    }','d','None.\nOutput:\n$ javac Output.javac\n$ java Output\n720'),(311,5,31,1,'Which of this keyword can be used in a subclass to call the constructor of superclass?','a','None.'),(312,5,31,2,'What is the process of defining a method in a subclass having same name & type signature as a method in its superclass?','b','None.'),(313,5,31,3,'Which of these keywords can be used to prevent Method overriding?','d','To disallow a method from being overridden, specify final as a modifier at the start of its declaration. Methods declared as final cannot be overridden.'),(314,5,31,4,'Which of these is correct way of calling a constructor having no parameters, of superclass A by subclass B?','d','None.'),(315,5,31,5,'At line number 2 in the following code, choose 3 valid data-type attributes/qualifiers among “final, static, native, public, private, abstract, protected”\npublic interface Status\n   {\n        /* insert qualifier here */ int MY_VALUE = 10;\n   }','d','Every interface variable is implicitly public static and final.'),(316,5,31,6,'Which of these is supported by method overriding in Java?','c','None.'),(317,5,31,7,'What will be the output of the following Java program?\nclass Alligator \n {\n  public static void main(String[] args) \n   {\n   int []x[] = {{1,2}, {3,4,5}, {6,7,8,9}};\n   int [][]y = x;\n   System.out.println(y[2][1]);\n   }\n }','c','Both x,and y are pointing to the same array.'),(318,5,31,8,'What will be the output of the following Java program?\nfinal class A \n    {\n         int i;\n    }    \n    class B extends A \n    {\n        int j;\n        System.out.println(j + \" \" + i);  \n    }    \n    class inheritance \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.display();     \n        }\n   }','d','class A has been declared final hence it cannot be inherited by any other class. Hence class B does not have member i, giving compilation error.\noutput:\n$ javac inheritance.java\nException in thread \"main\" java.lang.Error: Unresolved compilation problem: \n	i cannot be resolved or is not a field'),(319,5,31,9,'What will be the output of the following Java program?\nclass Abc\n  {\n      public static void main(String[]args)\n      {\n          String[] elements = { \"for\", \"tea\", \"too\" };\n          String first = (elements.length > 0) ? elements[0]: null;\n      }\n  }','d','The value at the 0th position will be assigned to the variable first.'),(320,5,31,10,'What will be the output of the following Java program?\nclass A \n    {\n        int i;\n        public void display() \n        {\n            System.out.println(i);\n        }    \n    }    \n    class B extends A \n   {\n        int j;\n        public void display() \n        {\n            System.out.println(j);\n        } \n    }    \n    class Dynamic_dispatch \n   {\n        public static void main(String args[])\n        {\n            B obj2 = new B();\n            obj2.i = 1;\n            obj2.j = 2;\n            A r;\n            r = obj2;\n            r.display();     \n        }\n   }','b','r is reference of type A, the program assigns a reference of object obj2 to r and uses that reference to call function display() of class B.\noutput:\n$ javac Dynamic_dispatch.java\n$ java Dynamic_dispatch \n2'),(321,5,32,1,'Which of these class is superclass of every class in Java?','b','Object class is superclass of every class in Java.'),(322,5,32,2,'Which of these method of Object class can clone an object?','c','None.'),(323,5,32,3,'Which of these method of Object class is used to obtain class of an object at run time?','c','None.'),(324,5,32,4,'Which of these keywords can be used to prevent inheritance of a class?','d','Declaring a class final implicitly declared all of its methods final, and makes the class inheritable.'),(325,5,32,5,'Which of these keywords cannot be used for a class which has been declared final?','a','A abstract class is incomplete by itself and relies upon its subclasses to provide a complete implementation. If we declare a class final then no class can inherit that class, an abstract class needs its subclasses hence both final and abstract cannot be used for a same class.'),(326,5,32,6,'Which of these class relies upon its subclasses for complete implementation of its methods?','b','None.'),(327,5,32,7,'What will be the output of the following Java program?\nabstract class A \n    {\n        int i;\n        abstract void display();\n    }    \n    class B extends A \n    {\n        int j;\n        void display() \n        {\n            System.out.println(j);\n        }\n    }    \n    class Abstract_demo \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.j=2;\n            obj.display();    \n        }\n    }','b','class A is an abstract class, it contains a abstract function display(), the full implementation of display() method is given in its subclass B, Both the display functions are the same. Prototype of display() is defined in class A and its implementation is given in class B.\noutput:\n$ javac Abstract_demo.java\n$ java Abstract_demo \n2'),(328,5,32,8,'What will be the output of the following Java program?\nclass A \n   {\n	int i;\n	int j;\n        A() \n        {\n            i = 1;\n            j = 2;\n        }\n   }\n   class Output \n   {\n        public static void main(String args[])\n        {\n             A obj1 = new A();\n             A obj2 = new A();\n	     System.out.print(obj1.equals(obj2));\n        }\n   }','a','obj1 and obj2 are two different objects. equals() is a method of Object class, Since Object class is superclass of every class it is available to every object.\noutput:\n$ javac Output.java\n$ java Output\nfalse'),(329,5,32,9,'What will be the output of the following Java code?\nclass Output \n    {\n        public static void main(String args[])\n        {\n             Object obj = new Object();\n	     System.out.print(obj.getclass());\n        }\n    }','c','None.\noutput:\n$ javac Output.java\n$ java Output\nclass java.lang.Object'),(330,5,32,10,'What will be the output of the following Java code?\nclass A \n   {\n        int i;\n	int j;\n        A() \n        {\n            i = 1;\n            j = 2;\n        }\n   }\n   class Output \n   {\n        public static void main(String args[])\n        {\n             A obj1 = new A();\n	     System.out.print(obj1.toString());\n        }\n   }','c','toString() is method of class Object, since it is superclass of every class, every object has this method. toString() returns the string associated with the calling object.\noutput:\n$ javac Output.java\n$ java Output \nA@1cd2e5f'),(331,5,33,1,'Which of these keywords are used to define an abstract class?','b','None.'),(332,5,33,2,'Which of these is not abstract?','a','Thread is not an abstract class.'),(333,5,33,3,'If a class inheriting an abstract class does not define all of its function then it will be known as?','a','Any subclass of an abstract class must either implement all of the abstract method in the superclass or be itself declared abstract.'),(334,5,33,4,'Which of these is not a correct statement?','c','Abstract class cannot be directly initiated with new operator, Since abstract class does not contain any definition of implementation it is not possible to create an abstract object.'),(335,5,33,5,'Which of these packages contains abstract keyword?','a','None.'),(336,5,33,6,'What will be the output of the following Java code?\nclass A \n    {\n        public int i;\n        private int j;\n    }    \n    class B extends A \n    {\n        void display() \n        {\n            super.j = super.i + 1;\n            System.out.println(super.i + \" \" + super.j);\n        }\n    }    \n    class inheritance \n   {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.i=1;\n            obj.j=2;   \n            obj.display();     \n        }\n   }','d','Class contains a private member variable j, this cannot be inherited by subclass B and does not have access to it.\noutput:\n$ javac inheritance.java\nException in thread \"main\" java.lang.Error: Unresolved compilation problem: \n	The field A.j is not visible'),(337,5,33,7,'What will be the output of the following Java code?\nclass A \n    {\n        public int i;\n        public int j;\n        A() \n       {\n            i = 1;\n            j = 2;\n	}\n    }    \n    class B extends A \n    {\n        int a;\n	B() \n        {\n            super();\n        } \n    }    \n    class super_use \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            System.out.println(obj.i + \" \" + obj.j)     \n        }\n   }','a','Keyword super is used to call constructor of class A by constructor of class B. Constructor of a initializes i & j to 1 & 2 respectively.\noutput:\n$ javac super_use.java\n$ java super_use\n1 2'),(338,5,33,8,'What will be the output of the following Java code?\nclass A \n    {\n        int i;\n        void display() \n        {\n            System.out.println(i);\n        }\n    }    \n    class B extends A \n    {\n        int j;\n        void display() \n        {\n            System.out.println(j);\n        }\n    }    \n    class method_overriding \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.i=1;\n            obj.j=2;   \n            obj.display();     \n        }\n   }','c','class A & class B both contain display() method, class B inherits class A, when display() method is called by object of class B, display() method of class B is executed rather than that of Class A.\noutput:\n$ javac method_overriding.java\n$ java method_overriding\n2'),(339,5,33,9,'What will be the output of the following Java code?\nclass A \n    {\n        public int i;\n        protected int j;\n    }    \n    class B extends A \n    {\n        int j;\n        void display() \n        {\n            super.j = 3;\n            System.out.println(i + \" \" + j);\n        }\n    }    \n    class Output \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.i=1;\n            obj.j=2;   \n            obj.display();     \n        }\n   }','a','Both class A & B have member with same name that is j, member of class B will be called by default if no specifier is used. I contains 1 & j contains 2, printing 1 2.\noutput:\n$ javac Output.java\n$ java Output\n1 2'),(340,5,34,1,'Which of this keyword must be used to inherit a class?','d','None.'),(341,5,34,2,'A class member declared protected becomes a member of subclass of which type?','b','A class member declared protected becomes a private member of subclass.'),(342,5,34,3,'Which of these is correct way of inheriting class A by class B?','c','None.'),(343,5,34,4,'Which two classes use the Shape class correctly?\nA. public class Circle implements Shape \n   {\n    private int radius;\n   }\nB. public abstract class Circle extends Shape \n   {\n    private int radius;\n   }\nC. public class Circle extends Shape \n   {\n   private int radius;\n   public void draw();\n   }\nD. public abstract class Circle implements Shape \n   {\n    private int radius;\n    public void draw();\n   }\nE. public class Circle extends Shape \n   {\n    private int radius;\n    public void draw()\n    {\n     /* code here */\n    }\n   }\nF. public abstract class Circle implements Shape \n   {\n     private int radius;\n     public void draw() \n     { \n      /* code here */ \n     }\n   }','a','If one is extending any class, then they should use extends keyword not implements.'),(344,5,34,5,'What will be the output of the following Java program?\nclass A \n    {\n        int i;\n        void display() \n        {\n            System.out.println(i);\n        }\n    }    \n    class B extends A \n    {\n        int j;\n        void display() \n        {\n            System.out.println(j);\n        }\n    }    \n    class inheritance_demo \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.i=1;\n            obj.j=2;   \n            obj.display();     \n        }\n   }','c','Class A & class B both contain display() method, class B inherits class A, when display() method is called by object of class B, display() method of class B is executed rather than that of Class A.\noutput:\n$ javac inheritance_demo.java \n$ java inheritance_demo \n2'),(345,5,34,6,'What will be the output of the following Java program?\nclass A \n    {\n        int i;\n    }    \n    class B extends A \n    {\n        int j;\n        void display() \n        {\n            super.i = j + 1;\n            System.out.println(j + \" \" + i);\n        }\n    }    \n    class inheritance \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            obj.i=1;\n            obj.j=2;   \n            obj.display();     \n        }\n   }','c','None\noutput:\n$ javac inheritance.java\n$ java inheritance\n2 3'),(346,5,34,7,'What will be the output of the following Java program?\nclass A \n    {\n        public int i;\n        public int j;\n        A() \n        {\n            i = 1;\n            j = 2;\n	}\n    }    \n    class B extends A \n    {\n        int a;\n        B() \n        {\n            super();\n        } \n    }    \n    class super_use \n    {\n        public static void main(String args[])\n        {\n            B obj = new B();\n            System.out.println(obj.i + \" \" + obj.j)     \n        }\n   }','a','Keyword super is used to call constructor of class A by constructor of class B. Constructor of a initializes i & j to 1 & 2 respectively.\noutput:\n$ javac super_use.java\n$ java super_use\n1 2'),(347,5,35,1,'What is not type of inheritance?','b','Inheritance is way of acquiring attributes and methods of parent class. Java supports hierarchical inheritance directly.'),(348,5,35,2,'Using which of the following, multiple inheritance in Java can be implemented?','a','Multiple inheritance in java is implemented using interfaces. Multiple interfaces can be implemented by a class.'),(349,5,35,3,'All classes in Java are inherited from which class?','d','All classes in java are inherited from Object class. Interfaces are not inherited from Object Class.'),(350,5,35,4,'In order to restrict a variable of a class from inheriting to subclass, how variable should be declared?','b','By declaring variable private, the variable will not be available in inherited to subclass.'),(351,5,35,5,'If super class and subclass have same variable name, which keyword should be used to use super class?','a','Super keyword is used to access hidden super class variable in subclass.'),(352,5,35,6,'Static members are not inherited to subclass.','b','Static members are also inherited to subclasses.'),(353,5,35,7,'Which of the following is used for implementing inheritance through an interface?','d','Interface is implemented using implements keyword. A concrete class must implement all the methods of an interface, else it must be declared abstract.'),(354,5,35,8,'Which of the following is used for implementing inheritance through class?','c','Class can be extended using extends keyword. One class can extend only one class. A final class cannot be extended.'),(355,5,35,9,'What would be the result if a class extends two interfaces and both have a method with same name and signature? Lets assume that the class is not implementing that method.','b','In case of such conflict, compiler will not be able to link a method call due to ambiguity. It will throw compile time error.'),(356,5,35,10,'Does Java support multiple level inheritance?','a','Java supports multiple level inheritance through implementing multiple interfaces.'),(357,6,36,1,'Which of these class is superclass of String and StringBuffer class?','b','None.'),(358,6,36,2,'Which of these operators can be used to concatenate two or more String objects?','a','Operator + is used to concatenate strings, Example String s = “i ” + “like ” + “java”; String s contains “I like java”.'),(359,6,36,3,'Which of this method of class String is used to obtain a length of String object?','d','Method length() of string class is used to get the length of the object which invoked method length().'),(360,6,36,4,'Which of these method of class String is used to extract a single character from a String object?','c','None.'),(361,6,36,5,'Which of these constructors is used to create an empty String object?','a','None.'),(362,6,36,6,'Which of these is an incorrect statement?','c','StringBuffer class is used to create strings that can be modified after they are created.'),(363,6,36,7,'What will be the output of the following Java program?\nclass String_demo \n    {\n        public static void main(String args[])\n        {\n            char chars[] = {\'a\', \'b\', \'c\'};\n            String s = new String(chars);\n            System.out.println(s);\n        }\n   }','d','String(chars) is a constructor of class string, it initializes string s with the values stored in character array chars, therefore s contains “abc”.\noutput:\n$ javac String_demo.java\n$ java String_demo \nabc'),(364,6,36,8,'What will be the output of the following Java program?\nclass String_demo \n    {\n        public static void main(String args[])\n        {\n            int ascii[] = { 65, 66, 67, 68};\n            String s = new String(ascii, 1, 3);\n            System.out.println(s);\n        }\n   }','b','ascii is an array of integers which contains ascii codes of Characters A, B, C, D. String(ascii, 1, 3) is an constructor which initializes s with Characters corresponding to ascii codes stored in array ascii, starting position being given by 1 & ending position by 3, Thus s stores BCD.\noutput:\n$ javac String_demo.java\n$ java String_demo \nBCD'),(365,6,36,9,'What will be the output of the following Java program?\nclass String_demo \n    {\n        public static void main(String args[])\n        {\n            char chars[] = {\'a\', \'b\', \'c\'};\n            String s = new String(chars);\n            String s1 = \"abcd\";\n            int len1 = s1.length();\n            int len2 = s.length();\n            System.out.println(len1 + \" \" + len2);\n        }\n   }','d','None.\noutput:\n$ javac String_demo.java\n$ java String_demo \n4 3'),(367,6,37,1,'Which of these method of class String is used to extract more than one character at a time a String object?','d','None.'),(368,6,37,2,'Which of these methods is an alternative to getChars() that stores the characters in an array of bytes?','a','getBytes() stores the character in an array of bytes. It uses default character to byte conversions provided by the platform.'),(369,6,37,3,'In the following Java code, what can directly access and change the value of the variable name?\npackage test;\n class Target \n {\n  public String name = \"hello\";\n }','c','Any class in the test package can access and change name.'),(370,6,37,4,'What will be the output of the following Java code?\npublic class Boxer1 \n{\n    Integer i;\n    int x;\n   public Boxer1(int y) \n   {\n        x = i+y;\n        System.out.println(x);\n   }\n   public static void main(String[] args) \n   {\n       new Boxer1 (new Integer(4));\n   }\n}','d','Because we are performing operation on reference variable which is null.'),(371,6,37,5,'Which of these methods can be used to convert all characters in a String into a character array?','c','charAt() return one character only not array of character.'),(372,6,37,6,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String c = \"Hello i love java\";\n           int start = 2;\n           int end = 9;\n           char s[]=new char[end-start];\n           c.getChars(start,end,s,0);\n           System.out.println(s);\n        }\n    }','d','getChars(start,end,s,0) returns an array from the string c, starting index of array is pointed by start and ending index is pointed by end. s is the target character array where the new string of letters is going to be stored and the new string will be stored from 0th position in s.\nOutput:\n$ javac output.java\n$ java output\nllo i l'),(373,6,37,7,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        {\n            String a = \"hello i love java\";\n            System.out.println(a.indexOf(\'i\')+\" \"+a.indexOf(\'o\') +\" \"+a.lastIndexOf(\'i\')+\" \"+a.lastIndexOf(\'o\'));\n        }\n    }','a','indexof(‘c’) and lastIndexof(‘c’) are pre defined function which are used to get the index of first and last occurrence of\nthe character pointed by c in the given array.\nOutput:\n$ javac output.java\n$ java output\n6 4 6 9'),(374,6,37,8,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        {\n            char c[]={\'a\', \'1\', \'b\' , ,\'A\' , \'0\'};\n            for (int i = 0; i < 5; ++i)\n            {\n                   if(Character.isDigit(c[i]))\n                       System.out.println(c[i]+\" is a digit\");\n                   if(Character.isWhitespace(c[i]))\n                       System.out.println(c[i]+\" is a Whitespace character\");\n                   if(Character.isUpperCase(c[i]))\n                       System.out.println(c[i]+\" is an Upper case Letter\");\n                   if(Character.isLowerCase(c[i]))\n                       System.out.println(c[i]+\" is a lower case Letter\");\n               i=i+3;\n            }\n        }\n    }','c','Character.isDigit(c[i]),Character.isUpperCase(c[i]),Character.isWhitespace(c[i]) are the function of library java.lang. They are used to find weather the given character is of specified type or not. They return true or false i:e Boolean variable.\nOutput:\n$ javac output.java\n$ java output\na is a lower case Letter\nA is an Upper Case Letter'),(375,6,37,9,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        {\n            char ch;\n            ch = \"hello\".charAt(1);\n            System.out.println(ch);\n        }\n   }','b','“hello” is a String literal, method charAt() returns the character specified at the index position. Character at index position 1 is e of hello, hence ch contains e.\noutput:\n$ javac output.java\n$ java output \ne'),(376,6,38,1,'Which of these method of class String is used to compare two String objects for their equality?','a','None.'),(377,6,38,2,'Which of these methods is used to compare a specific region inside a string with another specific region in another string?','d','None.'),(378,6,38,3,'Which of these methods of class String is used to check whether a given object starts with a particular string literal?','a','Method startsWith() of string class is used to check whether the String in question starts with a specified string. It is a specialized form of method regionMatches().'),(379,6,38,4,'What is the value returned by function compareTo() if the invoking string is less than the string compared?','b','compareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared to.'),(380,6,38,5,'Which of these data type value is returned by equals() method of String class?','c','equals() method of string class returns boolean value true if both the string are equal and false if they are unequal.'),(381,6,38,6,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String c = \"Hello i love java\";\n           boolean var;\n           var = c.startsWith(\"hello\");\n           System.out.println(var);\n        }\n    }','b','startsWith() method is case sensitive “hello” and “Hello” are treated differently, hence false is stored in var.\nOutput:\n$ javac output.java\n$ java output\nfalse'),(382,6,38,7,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String s1 = \"Hello i love java\";\n           String s2 = new String(s1);\n           System.out.println((s1 == s2) + \" \" + s1.equals(s2));\n        }\n    }','d','The == operator compares two object references to see whether they refer to the same instance, where as equals() compares the content of the two objects.\nOutput:\n$ javac output.java\n$ java output\nfalse true'),(383,6,38,8,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String s1 = \"Hello\";\n           String s2 = new String(s1);\n           String s3 = \"HELLO\";\n           System.out.println(s1.equals(s2) + \" \" + s2.equals(s3));\n        }\n    }','c','None.\nOutput:\n$ javac output.java\n$ java output\ntrue false'),(384,6,38,9,'In the following Java code, which code fragment should be inserted at line 3 so that the output will be: “123abc 123abc”?\n 1. StringBuilder sb1 = new StringBuilder(\"123\");\n 2. String s1 = \"123\";\n 3.  // insert code here\n 4. System.out.println(sb1 + \" \" + s1);','d','append() is stringbuffer method and concat is String class method.\nappend() is stringbuffer method and concat is String class method.'),(385,6,38,10,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        {\n             String chars[] = {\"a\", \"b\", \"c\", \"a\", \"c\"};\n             for (int i = 0; i < chars.length; ++i)\n                 for (int j = i + 1; j < chars.length; ++j)\n                     if(chars[i].compareTo(chars[j]) == 0)\n                         System.out.print(chars[j]); \n        }\n   }','d','compareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared to.\noutput:\n$ javac output.java\n$ java output  \nac'),(386,6,39,1,'Which of this method of class String is used to extract a substring from a String object?','a','None.'),(387,6,39,2,'What will s2 contain after following lines of Java code?\nString s1 = \"one\";\nString s2 = s1.concat(\"two\")','c','Two strings can be concatenated by using concat() method.'),(388,6,39,3,'Which of these method of class String is used to remove leading and trailing whitespaces?','b','None.'),(389,6,39,4,'What is the value returned by function compareTo() if the invoking string is greater than the string compared?','c','if (s1 == s2) then 0, if(s1 &gt; s2) &gt; 0, if (s1 &lt; s2) then &lt; 0.'),(390,6,39,5,'Which of the following statement is correct?','a','replace() method replaces all occurrences of one character in invoking string with another character.'),(391,6,39,6,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String c = \"  Hello World  \";\n           String s = c.trim();\n           System.out.println(\"\"\"+s+\"\"\");\n        }\n    }','c','trim() method is used to remove leading and trailing whitespaces in a string.\nOutput:\n$ javac output.java\n$ java output\n\"Hello World\"'),(392,6,39,7,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String s1 = \"one\";\n           String s2 = s1 + \" two\";\n           System.out.println(s2);\n        }\n    }','c','None.\nOutput:\n$ javac output.java\n$ java output\none two'),(393,6,39,8,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n           String s1 = \"Hello\";\n           String s2 = s1.replace(\'l\',\'w\');\n           System.out.println(s2);\n        }\n    }','d','replace() method replaces all occurrences of one character in invoking string with another character. s1.replace(‘l’,’w’) replaces every occurrence of ‘l’ in hello by ‘w’, giving hewwo.\nOutput:\n$ javac output.java\n$ java output\nhewwo'),(394,6,39,9,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        {\n           String s1 = \"Hello World\";\n           String s2 = s1.substring(0 , 4);\n           System.out.println(s2);\n        }\n   }','a','substring(0,4) returns the character from 0 th position to 3 rd position.\noutput:\n$ javac output.java\n$ java output \nHell'),(395,6,39,10,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        {             String s = \"Hello World\";\n             int i = s.indexOf(\'o\');\n             int j = s.lastIndexOf(\'l\');\n             System.out.print(i + \" \" + j);\n \n        }\n   }','c','indexOf() method returns the index of first occurrence of the character where as lastIndexOf() returns the index of last occurrence of the character.\noutput:\n$ javac output.java\n$ java output  \n4 9'),(396,6,40,1,'Which of these class is used to create an object whose character sequence is mutable?','b','StringBuffer represents growable and writable character sequence.'),(397,6,40,2,'Which of this method of class StringBuffer is used to concatenate the string representation to the end of invoking string?','b','None.'),(398,6,40,3,'Which of these method of class StringBuffer is used to find the length of current character sequence?','a','None.'),(399,6,40,4,'What is the string contained in s after following lines of Java code?\nStringBuffer s new StringBuffer(\"Hello\");\ns.deleteCharAt(0);','b','deleteCharAt() method deletes the character at the specified index location and returns the resulting StringBuffer object.'),(400,6,40,5,'Which of the following statement is correct?','a','reverse() method reverses all characters. It returns the reversed object on which it was called.'),(401,6,40,6,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        {\n            String a = \"hello i love java\";\n            System.out.println(a.indexOf(\'e\')+\" \"+a.indexOf(\'a\')+\" \"+a.lastIndexOf(\'l\')+\" \"+a.lastIndexOf(\'v\'));\n        }\n    }','d','indexof(‘c’) and lastIndexof(‘c’) are pre defined function which are used to get the index of first and last occurrence of\nthe character pointed by c in the given array.\nOutput:\n$ javac output.java\n$ java output\n1 14 8 15'),(402,6,40,7,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n             StringBuffer c = new StringBuffer(\"Hello\");\n             c.delete(0,2);\n             System.out.println(c);\n        }\n    }','d','delete(0,2) is used to delete the characters from 0 th position to 1 st position.\nOutput:\n$ javac output.java\n$ java output\nllo'),(403,6,40,8,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n             StringBuffer c = new StringBuffer(\"Hello\");\n             StringBuffer c1 = new StringBuffer(\" World\");\n             c.append(c1);\n             System.out.println(c);\n        }\n    }','d','append() method of class StringBuffer is used to concatenate the string representation to the end of invoking string.\nOutput:\n$ javac output.java\n$ java output\nHello World'),(404,6,40,9,'What will be the output of the following Java program?\nclass output \n    {\n        public static void main(String args[])\n        { \n           StringBuffer s1 = new StringBuffer(\"Hello\");\n           StringBuffer s2 = s1.reverse();\n           System.out.println(s2);\n        }\n    }','b','reverse() method reverses all characters. It returns the reversed object on which it was called.\nOutput:\n$ javac output.java\n$ java output\nolleH'),(405,6,40,10,'What will be the output of the following Java program?\nclass output \n    {\n       class output \n       {\n         public static void main(String args[])\n         {\n            char c[]={\'A\', \'1\', \'b\' , ,\'a\' , \'0\'};\n            for (int i = 0; i < 5; ++i)\n            {\n                   i++; \n                   if(Character.isDigit(c[i]))\n                       System.out.println(c[i]+\" is a digit\");\n                   if(Character.isWhitespace(c[i]))\n                       System.out.println(c[i]+\" is a Whitespace character\");\n                   if(Character.isUpperCase(c[i]))\n                       System.out.println(c[i]+\" is an Upper case Letter\");\n                   if(Character.isLowerCase(c[i]))\n                       System.out.println(c[i]+\" is a lower case Letter\");\n                   i++;\n            }\n        }\n    }','c','Character.isDigit(c[i]), Character.isUpperCase(c[i]), Character.isWhitespace(c[i]) are the function of library java.lang they are used to find whether the given character is of specified type or not. They return true or false i:e Boolean variable.\nOutput:\n$ javac output.java\n$ java output  \n1 is a digit\na is a lower case Letter'),(406,6,41,1,'Which of these methods of class StringBuffer is used to extract a substring from a String object?','a','None.'),(407,6,41,2,'What will s2 contain after following lines of Java code?\nStringBuffer s1 = \"one\";\nStringBuffer s2 = s1.append(\"two\")','c','Two strings can be concatenated by using append() method.'),(408,6,41,3,'Which of this method of class StringBuffer is used to reverse sequence of characters?','a','reverse() method reverses all characters. It returns the reversed object on which it was called.'),(409,6,41,4,'Which of this method of class StringBuffer is used to get the length of the sequence of characters?','a','length()- returns the length of String the StringBuffer would create whereas capacity() returns a total number of characters that can be supported before it is grown.'),(410,6,41,5,'Which of the following are incorrect form of StringBuffer class constructor?','d','None.'),(411,6,41,6,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n             StringBuffer c = new StringBuffer(\"Hello\");\n             System.out.println(c.length());\n        }\n    }','b','length() method is used to obtain length of StringBuffer object, length of “Hello” is 5.\nOutput:\n$ javac output.java\n$ java output\n5'),(412,6,41,7,'What will be the output of the following Java code?\nclass output \n  {  \n      public static void main(String args[]) \n      {  \n          StringBuffer sb=new StringBuffer(\"Hello\");  \n          sb.replace(1,3,\"Java\");  \n          System.out.println(sb);\n      }  \n  }','c','The replace() method replaces the given string from the specified beginIndex and endIndex.\n$ javac output.java\n$ java output\nHJavalo'),(413,6,41,8,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           StringBuffer s1 = new StringBuffer(\"Hello\");\n           s1.setCharAt(1,\'x\');\n           System.out.println(s1);\n        }\n    }','c','None.\nOutput:\n$ javac output.java\n$ java output\nHxllo'),(414,6,41,9,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        {\n           StringBuffer s1 = new StringBuffer(\"Hello World\");\n           s1.insert(6 , \"Good \");\n           System.out.println(s1);\n        }\n   }','d','The insert() method inserts one string into another. It is overloaded to accept values of all simple types, plus String and Objects. Sting is inserted into invoking object at specified position. “Good ” is inserted in “Hello World” T index 6 giving “Hello Good World”.\noutput:\n$ javac output.java\n$ java output \nHello Good World'),(415,6,41,10,'What will be the output of the following Java code?\nclass output \n    {\n        public static void main(String args[])\n        { \n           StringBuffer s1 = new StringBuffer(\"Hello\");\n           s1.insert(1,\"Java\");\n           System.out.println(s1);\n        }\n    }','d','Insert method will insert string at a specified position\nOutput:\n$ javac output.java\n$ java output\nHJavaello');
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `subthemes`
--

DROP TABLE IF EXISTS `subthemes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `subthemes` (
  `id` int DEFAULT NULL,
  `theme_id` int DEFAULT NULL,
  `subtheme_name` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `subthemes`
--

LOCK TABLES `subthemes` WRITE;
/*!40000 ALTER TABLE `subthemes` DISABLE KEYS */;
INSERT INTO `subthemes` VALUES (1,1,'Java Integer and Floating Data Types'),(2,1,'Java Character and Boolean Data Types'),(3,1,'Java Enums'),(4,1,'Java BigDecimal'),(5,1,'Java Data Type – Date & TimeZone'),(6,1,'Java Literals & Java Variables'),(7,1,'Java Type Conversions, Promotions and Castings'),(8,1,'Java Arrays'),(9,2,'Java Arithmetic Operators'),(10,2,'Java Bitwise Operators'),(11,2,'Java Relational Operator and Boolean Logic Operators'),(12,2,'Java Assignment Operators and Operator Precedence'),(13,2,'Java Control Statements – 1'),(14,2,'Java Control Statements – 2'),(15,3,'OOPs Concepts in Java'),(16,3,'JDK, JRE, JIT & JVM'),(17,4,'Class Fundamentals & Declaring objects in Java'),(18,4,'Java Method'),(19,4,'Constructor & Garbage Collection in Java'),(20,4,'Java Constructors'),(21,4,'Java Heap and Garbage Collection'),(22,4,'Overloading Methods & Argument Passing in Java'),(23,4,'Java Access Control – 1'),(24,4,'Java Access Control – 2'),(25,4,'Java Arrays Revisited & Keyword static'),(26,4,'Java String Class'),(27,4,'Java Methods Taking Parameters'),(28,4,'Java Command Line Arguments – 1'),(29,4,'Java Command Line Arguments – 2'),(30,4,'Java Recursion'),(31,5,'Method Overriding in Java'),(32,5,'Object Class in Java'),(33,5,'Java Abstract Class and Super'),(34,5,'Java Inheritance – 1'),(35,5,'Java Inheritance – 2'),(36,6,'Java String Handling Basics'),(37,6,'Java Character Extraction'),(38,6,'String Comparison in java'),(39,6,'Searching & Modifying a String in java'),(40,6,'StringBuffer Class in java'),(41,6,'StringBuffer Methods in java');
/*!40000 ALTER TABLE `subthemes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `themes`
--

DROP TABLE IF EXISTS `themes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `themes` (
  `id` int DEFAULT NULL,
  `theme_name` text,
  `theme_explanations` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `themes`
--

LOCK TABLES `themes` WRITE;
/*!40000 ALTER TABLE `themes` DISABLE KEYS */;
INSERT INTO `themes` VALUES (1,'Java Data Types, Variables, and Arrays','The section contains Java multiple choice questions and answers on integer, character, floating and boolean data types,\nvariables, type casting and conversions and properties of arrays.'),(2,'Java Operators and Control Statements','The section contains Java questions and answers on arithmetic, bitwise, relational, boolean and assignment operators. \nThe section also contains questions on control statements.'),(3,'Java Environment & OOPS Concepts','The section contains Java MCQs on oops concepts, jdk, jre, jit and jvm.'),(4,'Java Classes and Methods','The section contains Java multiple choice questions and answers on fundamentals of classes, methods basics, heap and garbage collection, object creation, constructors, access control, string class, method overloading and static keyword, command line arguments and recursion.'),(5,'Java Inheritance','The section contains Java questions and answers on the concepts of objects, method overriding, inheritance, abstract class and super.'),(6,'String Handling in Java','The section contains Java MCQs on the character extraction, string handling functions like stringbuffer class and methods, stringjoiner class and other string comparison functions.');
/*!40000 ALTER TABLE `themes` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-10-11 21:57:40
